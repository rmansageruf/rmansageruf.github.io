"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CEFTAFlagIcon = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _base = require("../base");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// **********************************
// Auto-generated file, do NOT modify
// **********************************

const FlagIcon = _ref => {
  let {
    svgRef,
    title = 'CEFTA flag',
    theme,
    ...props
  } = _ref;
  const uniqueTitleId = (0, _react.useId)();
  const titleId = title ? props.titleId || uniqueTitleId : undefined;
  const ariaHidden = titleId ? undefined : true;
  return /*#__PURE__*/_react.default.createElement("svg", (0, _extends2.default)({
    "aria-hidden": ariaHidden,
    "aria-labelledby": titleId,
    ref: svgRef,
    viewBox: "0 0 640 480"
  }, props), title ? /*#__PURE__*/_react.default.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/_react.default.createElement("path", {
    d: "M0 0h640v480H0z",
    fill: "#039"
  }), /*#__PURE__*/_react.default.createElement("circle", {
    cx: 320,
    cy: 249.8,
    fill: "none",
    r: 30.4,
    stroke: "#fc0",
    strokeWidth: 27.5
  }), /*#__PURE__*/_react.default.createElement("circle", {
    cx: 320,
    cy: 249.8,
    fill: "none",
    r: 88.3,
    stroke: "#fc0",
    strokeWidth: 27.5
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M404.7 165.1l84.7 84.7-84.7 84.7-84.7-84.7z",
    fill: "#039"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M175.7 236.1h59.2v27.5h-59.2zm259.1 0h88.3v27.5h-88.3zM363 187.4l38.8-38.8 19.4 19.5-38.7 38.7zM306.3 48.6h27.5v107.1h-27.5z",
    fill: "#fc0"
  }), /*#__PURE__*/_react.default.createElement("circle", {
    cx: 225.1,
    cy: 159.6,
    fill: "#fc0",
    r: 13.7
  }), /*#__PURE__*/_react.default.createElement("circle", {
    cx: 144.3,
    cy: 249.8,
    fill: "#fc0",
    r: 13.7
  }), /*#__PURE__*/_react.default.createElement("circle", {
    cx: 320,
    cy: 381.4,
    fill: "#fc0",
    r: 13.7
  }), /*#__PURE__*/_react.default.createElement("circle", {
    cx: 320,
    cy: 425.5,
    fill: "#fc0",
    r: 13.7
  }), /*#__PURE__*/_react.default.createElement("circle", {
    cx: 408.3,
    cy: 249.8,
    fill: "#fc0",
    r: 13.7
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M208.3 341.5l19.5-19.4 19.4 19.4-19.4 19.5zm204.7 21l19.5-19.5 19.5 19.5-19.5 19.4z",
    fill: "#fc0"
  }));
};
const FlagIconWithForwardedRef = /*#__PURE__*/(0, _react.forwardRef)((iconProps, ref) => /*#__PURE__*/_react.default.createElement(FlagIcon, (0, _extends2.default)({}, iconProps, {
  svgRef: ref
})));
const CEFTAFlagIcon = /*#__PURE__*/(0, _react.memo)((0, _base.createStyledFlagIcon)(FlagIconWithForwardedRef));
exports.CEFTAFlagIcon = CEFTAFlagIcon;
CEFTAFlagIcon.displayName = 'CEFTAFlagIcon';