"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BAFlagIcon = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _base = require("../base");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// **********************************
// Auto-generated file, do NOT modify
// **********************************

const FlagIcon = _ref => {
  let {
    svgRef,
    title = 'BA flag',
    theme,
    ...props
  } = _ref;
  const uniqueTitleId = (0, _react.useId)();
  const titleId = title ? props.titleId || uniqueTitleId : undefined;
  const ariaHidden = titleId ? undefined : true;
  return /*#__PURE__*/_react.default.createElement("svg", (0, _extends2.default)({
    "aria-hidden": ariaHidden,
    "aria-labelledby": titleId,
    ref: svgRef,
    viewBox: "0 0 640 480"
  }, props), title ? /*#__PURE__*/_react.default.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/_react.default.createElement("defs", null, /*#__PURE__*/_react.default.createElement("clipPath", {
    id: "BAFlagIcon__a"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M-85.3 0h682.6v512H-85.3z",
    fillOpacity: 0.7
  }))), /*#__PURE__*/_react.default.createElement("g", {
    clipPath: "url(#BAFlagIcon__a)",
    fillRule: "evenodd",
    transform: "translate(80) scale(.9375)"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M-85.3 0h682.6v512H-85.3V0z",
    fill: "#009"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M56.5 0l511 512.3V.3L56.5 0z",
    fill: "#FC0"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M439.9 481.5L412 461.2l-28.6 20.2 10.8-33.2-28.2-20.5h35l10.8-33.2 10.7 33.3h35l-28 20.7 10.4 33zm81.3 10.4l-35-.1-10.7-33.3-10.8 33.2h-35l28.2 20.5-10.8 33.2 28.6-20.2 28 20.3-10.5-33 28-20.6zM365.6 384.7l28-20.7-35-.1-10.7-33.2-10.8 33.2-35-.1 28.2 20.5-10.8 33.3 28.6-20.3 28 20.4-10.5-33zm-64.3-64.5l28-20.6-35-.1-10.7-33.3-10.9 33.2h-34.9l28.2 20.5-10.8 33.2 28.6-20.2 27.9 20.3-10.4-33zm-63.7-63.6l28-20.7h-35L220 202.5l-10.8 33.2h-35l28.2 20.4-10.8 33.3 28.6-20.3 28 20.4-10.5-33zm-64.4-64.3l28-20.6-35-.1-10.7-33.3-10.9 33.2h-34.9L138 192l-10.8 33.2 28.6-20.2 27.9 20.3-10.4-33zm-63.6-63.9l27.9-20.7h-35L91.9 74.3 81 107.6H46L74.4 128l-10.9 33.2L92.1 141l27.8 20.4-10.3-33zm-64-64l27.9-20.7h-35L27.9 10.3 17 43.6h-35L10.4 64l-11 33.3L28.1 77l27.8 20.4-10.3-33zm-64-64L9.4-20.3h-35l-10.7-33.3L-47-20.4h-35L-53.7 0l-10.8 33.2L-35.9 13l27.8 20.4-10.3-33z",
    fill: "#FFF"
  })));
};
const FlagIconWithForwardedRef = /*#__PURE__*/(0, _react.forwardRef)((iconProps, ref) => /*#__PURE__*/_react.default.createElement(FlagIcon, (0, _extends2.default)({}, iconProps, {
  svgRef: ref
})));
const BAFlagIcon = /*#__PURE__*/(0, _react.memo)((0, _base.createStyledFlagIcon)(FlagIconWithForwardedRef));
exports.BAFlagIcon = BAFlagIcon;
BAFlagIcon.displayName = 'BAFlagIcon';