import { theme as defaultTheme } from '@bigcommerce/big-design-theme';
import styled, { css } from 'styled-components';
import { Box } from '../Box';
export const Table = /*#__PURE__*/styled.table.withConfig({
  displayName: "styled__Table",
  componentId: "sc-16rzzpq-0"
})(["border-collapse:collapse;border-spacing:0;min-width:", ";table-layout:fixed;width:", ";&:focus{outline:none;}", ""], _ref => {
  let {
    minWidth,
    hasStaticWidth
  } = _ref;
  return minWidth && !hasStaticWidth ? `${minWidth}px` : 'auto';
}, _ref2 => {
  let {
    hasStaticWidth
  } = _ref2;
  return hasStaticWidth ? 'auto' : '100%';
}, _ref3 => {
  let {
    hasExpandableRows
  } = _ref3;
  return hasExpandableRows && css(["& > thead > tr{& > th:nth-of-type(2){padding-left:", ";}}& > tbody > tr{& > td:nth-of-type(3){padding-left:", ";}}"], _ref4 => {
    let {
      theme
    } = _ref4;
    return theme.spacing.xSmall;
  }, _ref5 => {
    let {
      theme
    } = _ref5;
    return theme.spacing.xSmall;
  });
});
Table.defaultProps = {
  theme: defaultTheme
};
export const Header = /*#__PURE__*/styled.th.withConfig({
  displayName: "styled__Header",
  componentId: "sc-16rzzpq-1"
})(["border:", ";border-right-color:", ";box-sizing:border-box;color:", ";font-weight:", ";height:", ";overflow:hidden;padding:", ";text-align:", ";width:", ";"], _ref6 => {
  let {
    theme
  } = _ref6;
  return `${theme.helpers.remCalc(0.5)} solid ${theme.colors.secondary30}`;
}, _ref7 => {
  let {
    theme,
    columnType
  } = _ref7;
  return columnType === 'toggle' ? `${theme.colors.white}` : `${theme.colors.secondary30}`;
}, _ref8 => {
  let {
    theme
  } = _ref8;
  return theme.colors.secondary60;
}, _ref9 => {
  let {
    theme
  } = _ref9;
  return theme.typography.fontWeight.semiBold;
}, _ref10 => {
  let {
    theme
  } = _ref10;
  return theme.helpers.remCalc(52);
}, _ref11 => {
  let {
    theme
  } = _ref11;
  return `0 ${theme.helpers.remCalc(17)}`;
}, _ref12 => {
  let {
    columnType
  } = _ref12;
  if (columnType === 'number') {
    return 'right';
  }
  if (columnType === 'checkbox') {
    return 'center';
  }
  return 'left';
}, _ref13 => {
  let {
    columnWidth
  } = _ref13;
  return typeof columnWidth === 'string' ? columnWidth : `${columnWidth}px`;
});
export const StyledBox = /*#__PURE__*/styled(Box).withConfig({
  displayName: "styled__StyledBox",
  componentId: "sc-16rzzpq-2"
})(["overflow-x:scroll;"]);
Header.defaultProps = {
  theme: defaultTheme
};