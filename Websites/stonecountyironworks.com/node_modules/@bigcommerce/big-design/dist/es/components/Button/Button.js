import _extends from "@babel/runtime/helpers/esm/extends";
import React, { forwardRef, memo } from 'react';
import { ProgressCircle } from '../ProgressCircle';
import { ContentWrapper, LoadingSpinnerWrapper, StyledButton } from './styled';
const LoadingSpinner = () => /*#__PURE__*/React.createElement(LoadingSpinnerWrapper, {
  alignItems: "center"
}, /*#__PURE__*/React.createElement(ProgressCircle, {
  size: "xxSmall"
}));
const RawButton = /*#__PURE__*/memo(_ref => {
  let {
    forwardedRef,
    isLoading,
    disabled,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(StyledButton, _extends({
    className: "bd-button"
  }, props, {
    disabled: isLoading || disabled,
    ref: forwardedRef
  }), isLoading ? /*#__PURE__*/React.createElement(LoadingSpinner, null) : null, /*#__PURE__*/React.createElement(ContentWrapper, {
    isLoading: isLoading
  }, !props.iconOnly && props.iconLeft, props.iconOnly, !props.iconOnly && props.children, !props.iconOnly && props.iconRight));
});
export const StyleableButton = /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(RawButton, _extends({}, props, {
  forwardedRef: ref
})));
export const Button = /*#__PURE__*/forwardRef((_ref2, ref) => {
  let {
    className,
    style,
    ...props
  } = _ref2;
  return /*#__PURE__*/React.createElement(RawButton, _extends({}, props, {
    forwardedRef: ref
  }));
});
const defaultProps = {
  actionType: 'normal',
  isLoading: false,
  mobileWidth: '100%',
  variant: 'primary'
};
Button.displayName = 'Button';
Button.defaultProps = {
  ...defaultProps
};
StyleableButton.displayName = 'StyleableButton';
StyleableButton.defaultProps = {
  ...defaultProps
};