import _extends from "@babel/runtime/helpers/esm/extends";
import React, { memo } from 'react';
import { StyledH0, StyledH1, StyledH2, StyledH3, StyledH4, StyledHR, StyledSmall, StyledText } from './styled';
const validHeadingTags = new Set(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']);

// Private
export const StyleableText = StyledText;
export const StyleableSmall = StyledSmall;
export const StyleableH0 = StyledH0;
export const StyleableH1 = StyledH1;
export const StyleableH2 = StyledH2;
export const StyleableH3 = StyledH3;
export const StyleableH4 = StyledH4;
export const StyleableHR = StyledHR;

// Public
export const Text = /*#__PURE__*/memo(_ref => {
  let {
    className,
    style,
    ...props
  } = _ref;
  return /*#__PURE__*/React.createElement(StyleableText, props);
});
export const Small = /*#__PURE__*/memo(_ref2 => {
  let {
    className,
    style,
    ...props
  } = _ref2;
  return /*#__PURE__*/React.createElement(StyleableSmall, props);
});
export const HR = /*#__PURE__*/memo(_ref3 => {
  let {
    className,
    style,
    ...props
  } = _ref3;
  return /*#__PURE__*/React.createElement(StyleableHR, props);
});
export const H0 = /*#__PURE__*/memo(_ref4 => {
  let {
    className,
    style,
    as,
    ...props
  } = _ref4;
  return /*#__PURE__*/React.createElement(StyleableH0, _extends({
    as: getHeadingTag('h1', as)
  }, props));
});
export const H1 = /*#__PURE__*/memo(_ref5 => {
  let {
    className,
    style,
    as,
    ...props
  } = _ref5;
  return /*#__PURE__*/React.createElement(StyleableH1, _extends({
    as: getHeadingTag('h1', as)
  }, props));
});
export const H2 = /*#__PURE__*/memo(_ref6 => {
  let {
    className,
    style,
    as,
    ...props
  } = _ref6;
  return /*#__PURE__*/React.createElement(StyleableH2, _extends({
    as: getHeadingTag('h2', as)
  }, props));
});
export const H3 = /*#__PURE__*/memo(_ref7 => {
  let {
    className,
    style,
    as,
    ...props
  } = _ref7;
  return /*#__PURE__*/React.createElement(StyleableH3, _extends({
    as: getHeadingTag('h3', as)
  }, props));
});
export const H4 = /*#__PURE__*/memo(_ref8 => {
  let {
    className,
    style,
    as,
    ...props
  } = _ref8;
  return /*#__PURE__*/React.createElement(StyleableH4, _extends({
    as: getHeadingTag('h4', as)
  }, props));
});
const getHeadingTag = (defaultTag, tag) => {
  return tag && validHeadingTags.has(tag) ? tag : defaultTag;
};
Text.displayName = 'Text';
Small.displayName = 'Small';
HR.displayName = 'HR';
H0.displayName = 'H0';
H1.displayName = 'H1';
H2.displayName = 'H2';
H3.displayName = 'H3';
H4.displayName = 'H4';