import { theme as defaultTheme } from '@bigcommerce/big-design-theme';
import styled, { css } from 'styled-components';
export const StyledCell = /*#__PURE__*/styled.td.withConfig({
  displayName: "styled__StyledCell",
  componentId: "sc-1bt06ph-0"
})(["position:relative;background-color:", ";border:", ";box-sizing:border-box;padding:", ";text-align:", ";user-select:none;", " ", " ", " ", " ", " ", " & p{display:block;white-space:inherit;word-break:break-word;margin:0;}", ""], _ref => {
  let {
    theme
  } = _ref;
  return theme.colors.inherit;
}, _ref2 => {
  let {
    theme
  } = _ref2;
  return `${theme.helpers.remCalc(0.5)} solid ${theme.colors.secondary30}`;
}, _ref3 => {
  let {
    theme,
    type
  } = _ref3;
  return type === 'select' || type === 'toggle' ? 0 : `${theme.helpers.remCalc(6)} ${theme.helpers.remCalc(17)}`;
}, _ref4 => {
  let {
    type
  } = _ref4;
  switch (type) {
    case 'number':
      return 'right';
    case 'checkbox':
      return 'center';
    default:
      return 'left';
  }
}, _ref5 => {
  let {
    type
  } = _ref5;
  return type === 'toggle' && css(["position:relative;border-color:", ";"], _ref6 => {
    let {
      theme
    } = _ref6;
    return `${theme.colors.white} ${theme.colors.white} ${theme.colors.white} ${theme.colors.secondary30}`;
  });
}, _ref7 => {
  let {
    type,
    isChild
  } = _ref7;
  return type === 'toggle' && !isChild && css(["border-color:", ";"], _ref8 => {
    let {
      theme
    } = _ref8;
    return `${theme.colors.secondary30} ${theme.colors.white} ${theme.colors.secondary30} ${theme.colors.secondary30}`;
  });
}, _ref9 => {
  let {
    type,
    isLastChild
  } = _ref9;
  return type === 'toggle' && isLastChild && css(["border-bottom-color:", ";"], _ref10 => {
    let {
      theme
    } = _ref10;
    return `${theme.colors.secondary30}`;
  });
}, _ref11 => {
  let {
    type,
    isSelected,
    isFirstSelected,
    isLastSelected,
    isNextCellValid
  } = _ref11;
  return isSelected && type !== 'toggle' && css(["border:", ";border-top-color:", ";border-bottom-color:", ";", "{display:block;}"], _ref12 => {
    let {
      theme
    } = _ref12;
    return `${theme.helpers.remCalc(0.5)} double ${theme.colors.primary}`;
  }, _ref13 => {
    let {
      theme
    } = _ref13;
    return `${isFirstSelected ? theme.colors.primary : theme.colors.secondary30}`;
  }, _ref14 => {
    let {
      theme
    } = _ref14;
    if (!isNextCellValid && !isLastSelected) {
      return theme.colors.danger;
    }
    return `${isFirstSelected || isLastSelected ? theme.colors.primary : theme.colors.secondary30}`;
  }, AutoFillHandler);
}, _ref15 => {
  let {
    isValid
  } = _ref15;
  return !isValid && css(["border:", ";"], _ref16 => {
    let {
      theme
    } = _ref16;
    return `${theme.helpers.remCalc(0.5)} double ${theme.colors.danger}`;
  });
}, _ref17 => {
  let {
    isEdited
  } = _ref17;
  return isEdited && css(["background-color:", ";"], _ref18 => {
    let {
      theme
    } = _ref18;
    return theme.colors.warning10;
  });
}, _ref19 => {
  let {
    type,
    isChild,
    isLastChild
  } = _ref19;
  return type === 'toggle' && isChild && css(["&::before{content:'';display:block;top:0;height:", ";left:50%;width:", ";position:absolute;background-color:", ";}&::after{content:'';display:block;top:50%;left:50%;width:50%;height:", ";position:absolute;background-color:", ";}"], isLastChild ? '50%' : '100%', _ref20 => {
    let {
      theme
    } = _ref20;
    return `${theme.helpers.remCalc(1)}`;
  }, _ref21 => {
    let {
      theme
    } = _ref21;
    return `${theme.colors.secondary30}`;
  }, _ref22 => {
    let {
      theme
    } = _ref22;
    return `${theme.helpers.remCalc(1)}`;
  }, _ref23 => {
    let {
      theme
    } = _ref23;
    return `${theme.colors.secondary30}`;
  });
});
export const AutoFillHandler = /*#__PURE__*/styled.div.withConfig({
  displayName: "styled__AutoFillHandler",
  componentId: "sc-1bt06ph-1"
})(["position:absolute;border:", ";height:", ";width:", ";background-color:", ";right:-", ";bottom:-", ";z-index:100;cursor:crosshair;display:none;"], _ref24 => {
  let {
    theme,
    isVisible
  } = _ref24;
  return `${theme.helpers.remCalc(1)} solid ${isVisible ? theme.colors.white : theme.colors.transparent}`;
}, _ref25 => {
  let {
    theme
  } = _ref25;
  return `${theme.helpers.remCalc(6)}`;
}, _ref26 => {
  let {
    theme
  } = _ref26;
  return `${theme.helpers.remCalc(6)}`;
}, _ref27 => {
  let {
    theme,
    isVisible
  } = _ref27;
  return isVisible ? theme.colors.primary : theme.colors.transparent;
}, _ref28 => {
  let {
    theme
  } = _ref28;
  return `${theme.helpers.remCalc(4)}`;
}, _ref29 => {
  let {
    theme
  } = _ref29;
  return `${theme.helpers.remCalc(4)}`;
});
export const CellNote = /*#__PURE__*/styled.div.withConfig({
  displayName: "styled__CellNote",
  componentId: "sc-1bt06ph-2"
})(["width:0;height:0;border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid ", ";position:absolute;top -1px;right:-5px;transform:rotate(45deg)"], _ref30 => {
  let {
    theme,
    color
  } = _ref30;
  return theme.colors[color];
});
StyledCell.defaultProps = {
  theme: defaultTheme
};
AutoFillHandler.defaultProps = {
  theme: defaultTheme
};
CellNote.defaultProps = {
  theme: defaultTheme
};