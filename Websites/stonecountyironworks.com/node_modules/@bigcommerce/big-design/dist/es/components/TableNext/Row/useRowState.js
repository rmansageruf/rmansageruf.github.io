export const useRowState = _ref => {
  let {
    isParentRow,
    isSelected,
    selectedItems,
    isChildrenRowsSelectable,
    childrenRowsIds
  } = _ref;
  const hasChildrenRows = Boolean(childrenRowsIds.length);
  const allChildrenRowsSelected = isChildrenRowsSelectable && hasChildrenRows && childrenRowsIds.every(childRowId => {
    return selectedItems[childRowId] !== undefined;
  });
  const someChildrenRowsSelected = isChildrenRowsSelectable && hasChildrenRows && childrenRowsIds.some(childRowId => {
    return selectedItems[childRowId] !== undefined;
  });
  const isRowChecked = () => {
    if (isParentRow) {
      return isChildrenRowsSelectable && hasChildrenRows ? allChildrenRowsSelected : isSelected;
    }
    return isSelected;
  };
  const isRowIndeterminate = () => {
    if (isParentRow) {
      return isChildrenRowsSelectable && hasChildrenRows ? someChildrenRowsSelected : false;
    }
    return false;
  };
  const isChecked = isRowChecked();
  const isIndeterminate = isRowIndeterminate();
  const label = isSelected ? `Selected` : `Unselected`;
  return {
    hasChildrenRows,
    isChecked,
    isIndeterminate,
    label
  };
};