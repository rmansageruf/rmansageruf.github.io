"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledTableHeaderIcon = exports.StyledTableHeaderCell = exports.StyledFlex = void 0;
var _bigDesignTheme = require("@bigcommerce/big-design-theme");
var _polished = require("polished");
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _Flex = require("../../Flex");
var _mixins = require("../mixins");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const StyledTableHeaderCell = /*#__PURE__*/_styledComponents.default.th.withConfig({
  displayName: "styled__StyledTableHeaderCell",
  componentId: "sc-1opnvtt-0"
})(["", " background-color:", ";border-bottom:", ";border-top:", ";box-sizing:border-box;color:", ";font-size:", ";padding:", ";white-space:nowrap;&:first-of-type{padding-left:", ";}&:last-of-type{padding-right:", ";}", ";", ";", ""], (0, _mixins.withTableColumnDisplay)(), _ref => {
  let {
    theme
  } = _ref;
  return theme.colors.white;
}, _ref2 => {
  let {
    theme
  } = _ref2;
  return theme.border.box;
}, _ref3 => {
  let {
    theme
  } = _ref3;
  return theme.border.box;
}, _ref4 => {
  let {
    theme
  } = _ref4;
  return theme.colors.secondary70;
}, _ref5 => {
  let {
    theme
  } = _ref5;
  return theme.typography.fontSize.medium;
}, _ref6 => {
  let {
    theme
  } = _ref6;
  return theme.spacing.small;
}, _ref7 => {
  let {
    theme
  } = _ref7;
  return theme.spacing.xLarge;
}, _ref8 => {
  let {
    theme
  } = _ref8;
  return theme.spacing.xLarge;
}, _ref9 => {
  let {
    isSortable
  } = _ref9;
  return isSortable && (0, _styledComponents.css)(["cursor:pointer;"]);
}, _ref10 => {
  let {
    width
  } = _ref10;
  return width !== undefined && (0, _styledComponents.css)(["width:", ";"], typeof width === 'string' ? width : `${width}px`);
}, _ref11 => {
  let {
    theme,
    stickyHeader,
    stickyHeight
  } = _ref11;
  return stickyHeader && stickyHeight >= 0 && (0, _styledComponents.css)(["", "{position:sticky;top:", ";z-index:", ";}"], theme.breakpoints.tablet, theme.helpers.remCalc(stickyHeight), theme.zIndex.sticky);
});
exports.StyledTableHeaderCell = StyledTableHeaderCell;
const StyledTableHeaderIcon = /*#__PURE__*/(0, _styledComponents.default)(StyledTableHeaderCell).withConfig({
  displayName: "styled__StyledTableHeaderIcon",
  componentId: "sc-1opnvtt-1"
})(["width:", ";white-space:nowrap;"], _ref12 => {
  let {
    theme
  } = _ref12;
  return theme.helpers.addValues(theme.spacing.xLarge, theme.spacing.small);
});
exports.StyledTableHeaderIcon = StyledTableHeaderIcon;
const StyledFlex = /*#__PURE__*/(0, _styledComponents.default)(_Flex.Flex).withConfig({
  displayName: "styled__StyledFlex",
  componentId: "sc-1opnvtt-2"
})(["", ";", ";"], _ref13 => {
  let {
    align
  } = _ref13;
  switch (align) {
    case 'center':
      return (0, _styledComponents.css)(["justify-content:center;"]);
    case 'right':
      return (0, _styledComponents.css)(["justify-content:flex-end;"]);
    default:
      return (0, _styledComponents.css)(["justify-content:flex-start;"]);
  }
}, _ref14 => {
  let {
    hide
  } = _ref14;
  return hide && (0, _polished.hideVisually)();
});
exports.StyledFlex = StyledFlex;
StyledFlex.defaultProps = {
  theme: _bigDesignTheme.theme
};
StyledTableHeaderCell.defaultProps = {
  theme: _bigDesignTheme.theme
};
StyledTableHeaderIcon.defaultProps = {
  theme: _bigDesignTheme.theme
};