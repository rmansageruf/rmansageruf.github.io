"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledTextareaWrapper = exports.StyledTextarea = void 0;
var _bigDesignTheme = require("@bigcommerce/big-design-theme");
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _transitions = require("../../mixins/transitions");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const StyledTextareaWrapper = /*#__PURE__*/_styledComponents.default.span.withConfig({
  displayName: "styled__StyledTextareaWrapper",
  componentId: "sc-c1uos0-0"
})(["align-items:center;display:flex;position:relative;"]);
exports.StyledTextareaWrapper = StyledTextareaWrapper;
const StyledTextarea = /*#__PURE__*/_styledComponents.default.textarea.withConfig({
  displayName: "styled__StyledTextarea",
  componentId: "sc-c1uos0-1"
})(["", " background-color:", ";border-radius:", ";box-sizing:border-box;color:", ";line-height:", ";max-height:", ";padding:", ";width:100%;", ";", ";&:hover:not([disabled]){", "}&:focus{outline:none;box-shadow:0 0 0 4px ", ";}&[disabled]{background-color:", ";}&::placeholder{color:", ";line-height:", ";font-size:", ";}"], (0, _transitions.withTransition)(['border', 'box-shadow']), _ref => {
  let {
    theme
  } = _ref;
  return theme.colors.white;
}, _ref2 => {
  let {
    theme
  } = _ref2;
  return theme.borderRadius.normal;
}, _ref3 => {
  let {
    theme
  } = _ref3;
  return theme.colors.secondary70;
}, _ref4 => {
  let {
    theme
  } = _ref4;
  return theme.lineHeight.medium;
}, _ref5 => {
  let {
    theme
  } = _ref5;
  return theme.helpers.remCalc(224);
}, _ref6 => {
  let {
    theme
  } = _ref6;
  return `${theme.spacing.xxSmall} ${theme.spacing.small}`;
}, _ref7 => {
  let {
    resize
  } = _ref7;
  return resize ? (0, _styledComponents.css)(["resize:vertical;"]) : (0, _styledComponents.css)(["resize:none;"]);
}, _ref8 => {
  let {
    error,
    theme
  } = _ref8;
  return (0, _styledComponents.css)(["border:", ";"], error ? theme.border.boxError : theme.border.box);
}, _ref9 => {
  let {
    error,
    theme
  } = _ref9;
  return error ? (0, _styledComponents.css)(["border:", ";"], theme.border.boxError) : (0, _styledComponents.css)(["border:1px solid ", ";"], theme.colors.secondary40);
}, props => props.error ? props.theme.colors.danger20 : props.theme.colors.primary20, _ref10 => {
  let {
    theme
  } = _ref10;
  return theme.colors.secondary20;
}, _ref11 => {
  let {
    theme
  } = _ref11;
  return theme.colors.secondary40;
}, _ref12 => {
  let {
    theme
  } = _ref12;
  return theme.lineHeight.medium;
}, _ref13 => {
  let {
    theme
  } = _ref13;
  return theme.typography.fontSize.medium;
});
exports.StyledTextarea = StyledTextarea;
StyledTextarea.defaultProps = {
  theme: _bigDesignTheme.theme
};
StyledTextareaWrapper.defaultProps = {
  theme: _bigDesignTheme.theme
};