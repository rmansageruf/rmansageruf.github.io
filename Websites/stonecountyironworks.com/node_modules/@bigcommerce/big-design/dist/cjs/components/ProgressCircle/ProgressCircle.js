"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProgressCircle = void 0;
var _bigDesignIcons = require("@bigcommerce/big-design-icons");
var _react = _interopRequireWildcard(require("react"));
var _utils = require("../../utils");
var _constants = require("./constants");
var _styled = require("./styled");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const ProgressCircle = (0, _utils.typedMemo)(_ref => {
  let {
    error,
    percent,
    size = 'medium'
  } = _ref;
  const dimensions = _constants.CIRCLE_DIMENSIONS[size];
  const renderedError = (0, _react.useMemo)(() => {
    return /*#__PURE__*/_react.default.createElement(_bigDesignIcons.ErrorIcon, {
      "aria-valuemax": 100,
      "aria-valuemin": 0,
      "aria-valuenow": percent || 0,
      "aria-valuetext": "Error",
      color: "danger",
      role: "progressbar",
      size: dimensions
    });
  }, [percent, dimensions]);
  const renderedSuccess = (0, _react.useMemo)(() => {
    return /*#__PURE__*/_react.default.createElement(_bigDesignIcons.CheckCircleIcon, {
      "aria-valuemax": 100,
      "aria-valuemin": 0,
      "aria-valuenow": 100,
      color: "success",
      role: "progressbar",
      size: dimensions
    });
  }, [dimensions]);
  const renderedCircle = (0, _react.useMemo)(() => {
    if (typeof percent !== 'number') {
      return /*#__PURE__*/_react.default.createElement(_styled.StyledProgressCircle, {
        role: "progressbar",
        size: size
      }, /*#__PURE__*/_react.default.createElement(_styled.StyledCircle, {
        size: size
      }), /*#__PURE__*/_react.default.createElement(_styled.StyledCircleFiller, {
        size: size
      }));
    }
    if (percent === 100) {
      return renderedSuccess;
    }
    return /*#__PURE__*/_react.default.createElement(_styled.StyledProgressCircle, {
      "aria-valuemax": 100,
      "aria-valuemin": 0,
      "aria-valuenow": percent,
      role: "progressbar",
      size: size
    }, /*#__PURE__*/_react.default.createElement(_styled.StyledCircle, {
      size: size
    }), /*#__PURE__*/_react.default.createElement(_styled.StyledCircleFiller, {
      percent: percent,
      size: size
    }), (size === 'large' || size === 'medium') && /*#__PURE__*/_react.default.createElement(_styled.StyledText, {
      size: size
    }, percent ? Math.floor(percent) : 0, "%"));
  }, [percent, size, renderedSuccess]);
  return error ? renderedError : renderedCircle;
});
exports.ProgressCircle = ProgressCircle;