"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RawPanel = exports.Panel = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _paddings = require("../../mixins/paddings/paddings");
var _utils = require("../../utils");
var _Badge = require("../Badge/Badge");
var _Button = require("../Button");
var _Flex = require("../Flex");
var _Typography = require("../Typography");
var _styled = require("./styled");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const RawPanel = /*#__PURE__*/(0, _react.memo)(_ref => {
  let {
    forwardedRef,
    ...props
  } = _ref;
  const filteredProps = (0, _paddings.excludePaddingProps)(props);
  const {
    action,
    children,
    description,
    header,
    headerId,
    badge,
    ...rest
  } = filteredProps;
  const renderHeader = () => {
    if (!header && !action) {
      return null;
    }
    if (typeof header !== 'string') {
      return null;
    }
    return /*#__PURE__*/_react.default.createElement(_Flex.Flex, {
      flexDirection: "row"
    }, Boolean(header) && /*#__PURE__*/_react.default.createElement(_styled.StyledH2, {
      id: headerId,
      marginBottom: description ? 'xxSmall' : 'medium'
    }, header, badge && /*#__PURE__*/_react.default.createElement(_Badge.Badge, (0, _extends2.default)({
      marginLeft: "xSmall"
    }, badge))), action && /*#__PURE__*/_react.default.createElement(_Button.Button, action, action.text));
  };
  const renderDescription = () => {
    if (!description) {
      return null;
    }
    if (typeof description === 'string') {
      return /*#__PURE__*/_react.default.createElement(_Typography.Text, {
        color: "secondary60"
      }, description);
    }
    if ( /*#__PURE__*/(0, _react.isValidElement)(description)) {
      return description;
    }
    (0, _utils.warning)('description must be either a string or a ReactNode.');
  };
  return /*#__PURE__*/_react.default.createElement(_styled.StyledPanel, (0, _extends2.default)({
    marginBottom: "medium"
  }, rest, {
    backgroundColor: "white",
    padding: {
      mobile: 'medium',
      tablet: 'xLarge'
    },
    ref: forwardedRef,
    shadow: "raised"
  }), renderHeader(), renderDescription(), children);
});
exports.RawPanel = RawPanel;
const Panel = /*#__PURE__*/(0, _react.forwardRef)((_ref2, ref) => {
  let {
    className,
    style,
    ...props
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement(RawPanel, (0, _extends2.default)({}, props, {
    forwardedRef: ref
  }));
});
exports.Panel = Panel;
Panel.displayName = 'Panel';