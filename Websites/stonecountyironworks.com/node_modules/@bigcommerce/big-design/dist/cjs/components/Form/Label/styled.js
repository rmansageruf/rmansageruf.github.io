"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledLabel = void 0;
var _bigDesignTheme = require("@bigcommerce/big-design-theme");
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _private = require("../../Typography/private");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const StyledLabel = /*#__PURE__*/(0, _styledComponents.default)(_private.StyleableH4).attrs({
  as: 'label'
}).withConfig({
  displayName: "styled__StyledLabel",
  componentId: "sc-m3fyue-0"
})(["cursor:pointer;display:inline-block;margin-bottom:", ";", ""], _ref => {
  let {
    theme
  } = _ref;
  return theme.spacing.xxSmall;
}, _ref2 => {
  let {
    theme,
    renderOptional,
    localization
  } = _ref2;
  return renderOptional && (0, _styledComponents.css)(["&::after{color:", ";content:' (", ")';font-weight:", ";}"], theme.colors.secondary60, localization.optional, theme.typography.fontWeight.regular);
});
exports.StyledLabel = StyledLabel;
StyledLabel.defaultProps = {
  theme: _bigDesignTheme.theme
};