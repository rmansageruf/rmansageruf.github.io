"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withTableColumnDisplay = void 0;
var _bigDesignTheme = require("@bigcommerce/big-design-theme");
var _styledComponents = require("styled-components");
const withTableColumnDisplay = () => (0, _styledComponents.css)(["", ";"], _ref => {
  let {
    display,
    theme
  } = _ref;
  return display && getDisplayStyles(display, theme, 'display');
});
exports.withTableColumnDisplay = withTableColumnDisplay;
const getDisplayStyles = (displayProp, theme, cssKey) => {
  if (typeof displayProp === 'object') {
    return getResponsiveDisplay(displayProp, theme, cssKey);
  }
  if (typeof displayProp === 'string' || typeof displayProp === 'number') {
    return getSimpleDisplay(displayProp, cssKey);
  }
  return [];
};
const getSimpleDisplay = (displayProp, cssKey) => (0, _styledComponents.css)(["", ":", ""], cssKey, displayProp);
const getResponsiveDisplay = (displayProp, theme, cssKey) => {
  const breakpointKeys = Object.keys(displayProp).sort((firstBreakpoint, secondBreakpoint) =>
  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
  _bigDesignTheme.breakpointsOrder.indexOf(firstBreakpoint) -
  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
  _bigDesignTheme.breakpointsOrder.indexOf(secondBreakpoint));

  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
  return breakpointKeys.map(breakpointKey => (0, _styledComponents.css)(["", "{", " ", "}"], theme.breakpoints[breakpointKey], /* eslint-disable-next-line @typescript-eslint/no-unsafe-member-access */'', getSimpleDisplay(displayProp[breakpointKey], cssKey)));
};