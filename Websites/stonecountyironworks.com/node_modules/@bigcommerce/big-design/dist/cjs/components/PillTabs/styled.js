"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledPillTab = exports.StyledFlexItem = void 0;
var _bigDesignTheme = require("@bigcommerce/big-design-theme");
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _private = require("../Button/private");
var _Flex = require("../Flex");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const StyledPillTab = /*#__PURE__*/(0, _styledComponents.default)(_private.StyleableButton).withConfig({
  displayName: "styled__StyledPillTab",
  componentId: "sc-1n62hko-0"
})(["", ""], props => props.isActive && (0, _styledComponents.css)(["background-color:", ";"], _ref => {
  let {
    theme
  } = _ref;
  return theme.colors.primary20;
}));
exports.StyledPillTab = StyledPillTab;
const StyledFlexItem = /*#__PURE__*/(0, _styledComponents.default)(_Flex.FlexItem).withConfig({
  displayName: "styled__StyledFlexItem",
  componentId: "sc-1n62hko-1"
})(["", ""], props => !props.isVisible && (0, _styledComponents.css)(["position:absolute;visibility:hidden;z-index:", ";"], _ref2 => {
  let {
    theme
  } = _ref2;
  return -theme.zIndex.tooltip;
}));
exports.StyledFlexItem = StyledFlexItem;
StyledPillTab.defaultProps = {
  theme: _bigDesignTheme.theme
};
StyledFlexItem.defaultProps = {
  theme: _bigDesignTheme.theme
};