"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Link = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _bigDesignIcons = require("@bigcommerce/big-design-icons");
var _react = _interopRequireWildcard(require("react"));
var _styled = require("./styled");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const StyleableLink = /*#__PURE__*/(0, _react.memo)(props => /*#__PURE__*/_react.default.createElement(_styled.StyledLink, props));
const Link = /*#__PURE__*/(0, _react.forwardRef)((_ref, ref) => {
  let {
    children,
    external,
    ...props
  } = _ref;
  const isExternal = external && props.target === '_blank';
  return /*#__PURE__*/_react.default.createElement(StyleableLink, (0, _extends2.default)({}, props, {
    forwardedRef: ref,
    isExternal: isExternal
  }), isExternal ? /*#__PURE__*/_react.default.createElement("span", null, children) : children, isExternal && /*#__PURE__*/_react.default.createElement(_bigDesignIcons.OpenInNewIcon, {
    size: "medium"
  }));
});
exports.Link = Link;
Link.displayName = 'Link';