"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Textarea = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _utils = require("../../utils");
var _Form = require("../Form");
var _useInputErrors = require("../Form/useInputErrors");
var _styled = require("./styled");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const StyleableTextarea = _ref => {
  let {
    description,
    error,
    forwardedRef,
    label,
    labelId,
    localization,
    rows = 3,
    resize = true,
    ...props
  } = _ref;
  const uniqueTextareaId = (0, _react.useId)();
  const id = props.id ? props.id : uniqueTextareaId;
  const {
    errors
  } = (0, _useInputErrors.useInputErrors)(id, error);
  const MAX_ROWS = 7;
  const numOfRows = rows && rows > MAX_ROWS ? MAX_ROWS : rows;
  const renderedLabel = (0, _react.useMemo)(() => {
    if (!label) {
      return null;
    }
    if (typeof label === 'string') {
      return /*#__PURE__*/_react.default.createElement(_Form.FormControlLabel, {
        htmlFor: id,
        id: labelId,
        localization: localization,
        renderOptional: !props.required
      }, label);
    }
    if ( /*#__PURE__*/(0, _react.isValidElement)(label) && label.type === _Form.FormControlLabel) {
      return /*#__PURE__*/(0, _react.cloneElement)(label, {
        id: labelId,
        htmlFor: id
      });
    }
    (0, _utils.warning)('label must be either a string or a FormControlLabel component.');
  }, [id, label, labelId, localization, props.required]);
  const renderedDescription = (0, _react.useMemo)(() => {
    if (!description) {
      return null;
    }
    if (typeof description === 'string') {
      return /*#__PURE__*/_react.default.createElement(_Form.FormControlDescription, null, description);
    }
    if ( /*#__PURE__*/(0, _react.isValidElement)(description) && description.type === _Form.FormControlDescription) {
      return description;
    }
    (0, _utils.warning)('description must be either a string or a FormControlDescription component.');
  }, [description]);
  return /*#__PURE__*/_react.default.createElement("div", null, renderedLabel, renderedDescription, /*#__PURE__*/_react.default.createElement(_styled.StyledTextareaWrapper, null, /*#__PURE__*/_react.default.createElement(_styled.StyledTextarea, (0, _extends2.default)({}, props, {
    error: errors,
    id: id,
    ref: forwardedRef,
    resize: resize,
    rows: numOfRows
  }))));
};
const Textarea = (0, _utils.typedMemo)( /*#__PURE__*/(0, _react.forwardRef)((_ref2, ref) => {
  let {
    className,
    style,
    ...props
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement(StyleableTextarea, (0, _extends2.default)({}, props, {
    forwardedRef: ref
  }));
}));
exports.Textarea = Textarea;