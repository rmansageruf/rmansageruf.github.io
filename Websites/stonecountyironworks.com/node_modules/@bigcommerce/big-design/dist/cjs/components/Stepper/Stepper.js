"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Stepper = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _Flex = require("../Flex");
var _Step = require("./Step");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const Stepper = /*#__PURE__*/(0, _react.memo)(_ref => {
  let {
    className,
    style,
    steps,
    currentStep = 0,
    ...props
  } = _ref;
  return steps.length ? /*#__PURE__*/_react.default.createElement(_Flex.Flex, (0, _extends2.default)({}, props, {
    "aria-valuemax": steps.length,
    "aria-valuemin": 0,
    "aria-valuenow": currentStep + 1,
    "aria-valuetext": `Step ${currentStep + 1}: ${steps[currentStep]}`,
    flexDirection: "row",
    flexWrap: "nowrap",
    marginBottom: "xLarge",
    role: "progressbar"
  }), steps.map((text, index) => /*#__PURE__*/_react.default.createElement(_Step.Step, {
    index: index,
    key: index,
    selectedIndex: currentStep,
    stepperLength: steps.length,
    text: text
  }))) : null;
});
exports.Stepper = Stepper;
Stepper.displayName = 'Stepper';