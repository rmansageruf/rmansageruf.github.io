/// <reference types="react" />
import { TableSelectable } from '../../types';
import { SelectRowArg } from './helpers';
interface OnItemSelectFnArg extends Omit<SelectRowArg, 'selectedItems' | 'setSelectedParentRowsCrossPages'> {
    isParentRow: boolean;
    parentRowId: string;
    childRowId?: string;
    childrenRowsIds: string[];
}
export type OnItemSelectFn = ({ isParentRow, parentRowId, childRowId, childrenRowsIds, }: OnItemSelectFnArg) => void;
export declare const useSelectable: (selectable?: TableSelectable) => {
    isSelectable: boolean;
    onItemSelect: OnItemSelectFn | undefined;
    selectedItems: Record<string, true>;
    isChildrenRowsSelectable: boolean;
    selectedParentRowsCrossPages: Set<string>;
    setSelectedParentRowsCrossPages: import("react").Dispatch<import("react").SetStateAction<Set<string>>>;
};
export {};
//# sourceMappingURL=useSelectable.d.ts.map