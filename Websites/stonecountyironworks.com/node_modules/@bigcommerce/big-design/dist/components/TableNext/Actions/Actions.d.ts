import React, { Dispatch, RefObject, SetStateAction } from 'react';
import { TableExpandable, TableItem, TablePaginationProps, TableProps, TableSelectable } from '../types';
export interface ActionsProps<T> {
    customActions?: React.ReactNode;
    forwardedRef: RefObject<HTMLDivElement>;
    itemName?: string;
    items: T[];
    pagination?: TablePaginationProps;
    selectedItems: TableSelectable['selectedItems'];
    stickyHeader?: boolean;
    tableId: string;
    getChildren?: TableExpandable<T>['getChildren'];
    onSelectionChange?: TableSelectable['onSelectionChange'];
    getRowId: NonNullable<TableProps<T>['getRowId']>;
    setSelectedParentRowsCrossPages: Dispatch<SetStateAction<Set<string>>>;
    selectedParentRowsCrossPages: Set<string>;
    isChildrenRowsSelectable?: boolean;
}
export declare const Actions: <T extends TableItem>({ customActions, forwardedRef, itemName, items, pagination, selectedItems, stickyHeader, tableId, getChildren, onSelectionChange, getRowId, setSelectedParentRowsCrossPages, selectedParentRowsCrossPages, isChildrenRowsSelectable, ...props }: ActionsProps<T>) => React.JSX.Element;
//# sourceMappingURL=Actions.d.ts.map