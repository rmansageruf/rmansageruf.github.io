import React, { TableHTMLAttributes } from 'react';
import { TableColumn, TableSelectable } from '../types';
export interface RowProps<T> extends TableHTMLAttributes<HTMLTableRowElement> {
    columns: Array<TableColumn<T>>;
    headerCellWidths: Array<number | string>;
    isDraggable: boolean;
    isDragging?: boolean;
    isExpanded?: boolean;
    isExpandable?: boolean;
    isParentRow?: boolean;
    isSelected?: boolean;
    isSelectable?: boolean;
    item: T;
    selectedItems: TableSelectable['selectedItems'];
    showDragIcon?: boolean;
    isChildrenRowsSelectable?: TableSelectable['isChildrenRowsSelectable'];
    onExpandedRow?: () => void;
    onItemSelect: () => void;
    parentRowId: string;
    childRowId?: string;
    childrenRowsIds: string[];
}
export declare const Row: React.ForwardRefExoticComponent<RowProps<any> & React.RefAttributes<HTMLTableRowElement>>;
//# sourceMappingURL=Row.d.ts.map