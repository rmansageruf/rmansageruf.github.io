import { TableExpandable, TableSelectable } from '../types';
import { SelectAllProps } from './SelectAll';
type SelectAllRowsArg<T> = Omit<SelectAllProps<T>, 'onChange'>;
export declare function getChildrenRows<T>(parentRow: T, getChildren?: TableExpandable<T>['getChildren']): T[];
export declare function areAllInPageSelected<T>({ items, selectedItems, getChildren, pagination, getRowId, isChildrenRowsSelectable, }: SelectAllRowsArg<T>): boolean;
export declare function areSomeInPageSelected<T>({ items, selectedItems, getChildren, pagination, getRowId, isChildrenRowsSelectable, }: SelectAllRowsArg<T>): boolean;
export declare function getSelectAllState<T>(params: SelectAllRowsArg<T>): TableSelectable['selectedItems'];
export {};
//# sourceMappingURL=helpers.d.ts.map