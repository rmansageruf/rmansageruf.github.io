export declare const StyledFlex: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, import("../../Box/Box").BoxProps & Partial<{
    alignContent: "center" | "end" | "start" | "baseline" | "normal" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | "stretch" | import("../../../types").Responsive<"center" | "end" | "start" | "baseline" | "normal" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | "stretch">;
    alignItems: "center" | "end" | "start" | "baseline" | "normal" | "flex-start" | "flex-end" | "stretch" | "self-start" | "self-end" | import("../../../types").Responsive<"center" | "end" | "start" | "baseline" | "normal" | "flex-start" | "flex-end" | "stretch" | "self-start" | "self-end">;
    flexColumnGap: string | import("../../../types").Responsive<string>;
    flexDirection: "row" | "column" | "row-reverse" | "column-reverse" | import("../../../types").Responsive<"row" | "column" | "row-reverse" | "column-reverse">;
    flexGap: string | import("../../../types").Responsive<string>;
    flexRowGap: string | import("../../../types").Responsive<string>;
    flexWrap: "wrap" | "nowrap" | "wrap-reverse" | import("../../../types").Responsive<"wrap" | "nowrap" | "wrap-reverse">;
    justifyContent: "center" | "end" | "start" | "baseline" | "left" | "right" | "normal" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | "stretch" | import("../../../types").Responsive<"center" | "end" | "start" | "baseline" | "left" | "right" | "normal" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | "stretch">;
}> & {
    stickyHeader?: boolean | undefined;
}, never>;
//# sourceMappingURL=styled.d.ts.map