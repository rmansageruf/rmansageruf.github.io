export declare const withGridedContainer: () => import("styled-components").FlattenInterpolation<import("styled-components").ThemedStyledProps<Partial<{
    gridAreas: string | import("../../types").Responsive<string>;
    gridAutoColumns: string | import("../../types").Responsive<string>;
    gridAutoFlow: "inherit" | "initial" | "unset" | "row" | "column" | "dense" | "row dense" | "column dense" | import("../../types").Responsive<"inherit" | "initial" | "unset" | "row" | "column" | "dense" | "row dense" | "column dense">;
    gridAutoRows: string | import("../../types").Responsive<string>;
    gridColumns: string | import("../../types").Responsive<string>;
    gridColumnGap: string | import("../../types").Responsive<string>;
    gridGap: string | import("../../types").Responsive<string>;
    gridRows: string | import("../../types").Responsive<string>;
    gridRowGap: string | import("../../types").Responsive<string>;
    gridTemplate: string | import("../../types").Responsive<string>;
}>, import("styled-components").DefaultTheme>>;
export declare const withGridedItems: () => import("styled-components").FlattenInterpolation<import("styled-components").ThemedStyledProps<Partial<{
    gridArea: string | import("../../types").Responsive<string>;
    gridColumn: string | import("../../types").Responsive<string>;
    gridColumnEnd: string | import("../../types").Responsive<string>;
    gridColumnStart: string | import("../../types").Responsive<string>;
    gridRow: string | import("../../types").Responsive<string>;
    gridRowEnd: string | import("../../types").Responsive<string>;
    gridRowStart: string | import("../../types").Responsive<string>;
}>, import("styled-components").DefaultTheme>>;
//# sourceMappingURL=withGrid.d.ts.map