/// <reference types="react" />
export declare const StyledButton: import("styled-components").StyledComponent<"button", import("styled-components").DefaultTheme, import("./Button").ButtonProps & Partial<{
    margin: keyof import("@bigcommerce/big-design-theme").Spacing | "auto" | import("../../types").Responsive<keyof import("@bigcommerce/big-design-theme").Spacing | "auto">;
    marginTop: keyof import("@bigcommerce/big-design-theme").Spacing | "auto" | import("../../types").Responsive<keyof import("@bigcommerce/big-design-theme").Spacing | "auto">;
    marginRight: keyof import("@bigcommerce/big-design-theme").Spacing | "auto" | import("../../types").Responsive<keyof import("@bigcommerce/big-design-theme").Spacing | "auto">;
    marginBottom: keyof import("@bigcommerce/big-design-theme").Spacing | "auto" | import("../../types").Responsive<keyof import("@bigcommerce/big-design-theme").Spacing | "auto">;
    marginLeft: keyof import("@bigcommerce/big-design-theme").Spacing | "auto" | import("../../types").Responsive<keyof import("@bigcommerce/big-design-theme").Spacing | "auto">;
    marginVertical: keyof import("@bigcommerce/big-design-theme").Spacing | "auto" | import("../../types").Responsive<keyof import("@bigcommerce/big-design-theme").Spacing | "auto">;
    marginHorizontal: keyof import("@bigcommerce/big-design-theme").Spacing | "auto" | import("../../types").Responsive<keyof import("@bigcommerce/big-design-theme").Spacing | "auto">;
}>, never>;
export declare const ContentWrapper: import("styled-components").StyledComponent<"span", import("styled-components").DefaultTheme, {
    isLoading?: boolean | undefined;
}, "isLoading">;
export declare const LoadingSpinnerWrapper: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../Box/Box").BoxProps & Partial<{
    alignContent: "center" | "end" | "start" | "baseline" | "normal" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | "stretch" | import("../../types").Responsive<"center" | "end" | "start" | "baseline" | "normal" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | "stretch">;
    alignItems: "center" | "end" | "start" | "baseline" | "normal" | "flex-start" | "flex-end" | "stretch" | "self-start" | "self-end" | import("../../types").Responsive<"center" | "end" | "start" | "baseline" | "normal" | "flex-start" | "flex-end" | "stretch" | "self-start" | "self-end">;
    flexColumnGap: string | import("../../types").Responsive<string>;
    flexDirection: "row" | "column" | "row-reverse" | "column-reverse" | import("../../types").Responsive<"row" | "column" | "row-reverse" | "column-reverse">;
    flexGap: string | import("../../types").Responsive<string>;
    flexRowGap: string | import("../../types").Responsive<string>;
    flexWrap: "wrap" | "nowrap" | "wrap-reverse" | import("../../types").Responsive<"wrap" | "nowrap" | "wrap-reverse">;
    justifyContent: "center" | "end" | "start" | "baseline" | "left" | "right" | "normal" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | "stretch" | import("../../types").Responsive<"center" | "end" | "start" | "baseline" | "left" | "right" | "normal" | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | "stretch">;
}> & import("react").RefAttributes<HTMLDivElement>>, import("styled-components").DefaultTheme, {}, never>;
//# sourceMappingURL=styled.d.ts.map