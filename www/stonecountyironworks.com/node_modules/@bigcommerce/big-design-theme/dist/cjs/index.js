"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  createTheme: true,
  theme: true
};
exports.theme = exports.createTheme = void 0;
var _helpers = require("./helpers");
Object.keys(_helpers).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _helpers[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _helpers[key];
    }
  });
});
var _options = require("./options");
var _border = require("./system/border");
var _breakpoints = require("./system/breakpoints");
var _colors = require("./system/colors");
var keyframes = _interopRequireWildcard(require("./system/keyframes"));
var _lineHeight = require("./system/line-height");
var _shadow = require("./system/shadow");
var _spacing = require("./system/spacing");
var _typography = require("./system/typography");
var _zIndex = require("./system/z-index");
var _system = require("./system");
Object.keys(_system).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _system[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _system[key];
    }
  });
});
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const createTheme = function () {
  let customOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  _options.themeOptions.setOptions(customOptions);
  return {
    border: (0, _border.createBorder)(),
    borderRadius: (0, _border.createBorderRadius)(),
    breakpointValues: _breakpoints.breakpointValues,
    breakpoints: _breakpoints.breakpoints,
    colors: _colors.colors,
    helpers: (0, _helpers.createHelpers)(),
    keyframes,
    lineHeight: (0, _lineHeight.createLineHeight)(),
    shadow: _shadow.shadow,
    spacing: (0, _spacing.createSpacing)(),
    typography: (0, _typography.createTypography)(),
    zIndex: _zIndex.zIndex
  };
};
exports.createTheme = createTheme;
const theme = createTheme();
exports.theme = theme;