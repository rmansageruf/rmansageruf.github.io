import _extends from "@babel/runtime/helpers/esm/extends";
// **********************************
// Auto-generated file, do NOT modify
// **********************************
import React, { forwardRef, memo, useId } from 'react';
import { createStyledIcon } from '../base';
const Icon = _ref => {
  let {
    svgRef,
    title,
    theme,
    ...props
  } = _ref;
  const uniqueTitleId = useId();
  const titleId = title ? props.titleId || uniqueTitleId : undefined;
  const ariaHidden = titleId ? undefined : true;
  return /*#__PURE__*/React.createElement("svg", _extends({
    "aria-hidden": ariaHidden,
    "aria-labelledby": titleId,
    fill: "currentColor",
    height: 24,
    ref: svgRef,
    stroke: "currentColor",
    strokeWidth: "0",
    viewBox: "0 0 24 24",
    width: 24
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/React.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M14.71 6.71a.996.996 0 00-1.41 0L8.71 11.3a.996.996 0 000 1.41l4.59 4.59a.996.996 0 101.41-1.41L10.83 12l3.88-3.88c.39-.39.38-1.03 0-1.41z"
  }));
};
const IconWithForwardedRef = /*#__PURE__*/forwardRef((iconProps, ref) => /*#__PURE__*/React.createElement(Icon, _extends({}, iconProps, {
  svgRef: ref
})));
export const ChevronLeftIcon = /*#__PURE__*/memo(createStyledIcon(IconWithForwardedRef));
ChevronLeftIcon.displayName = 'ChevronLeftIcon';