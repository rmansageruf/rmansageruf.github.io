"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.STFlagIcon = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _base = require("../base");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// **********************************
// Auto-generated file, do NOT modify
// **********************************

const FlagIcon = _ref => {
  let {
    svgRef,
    title = 'ST flag',
    theme,
    ...props
  } = _ref;
  const uniqueTitleId = (0, _react.useId)();
  const titleId = title ? props.titleId || uniqueTitleId : undefined;
  const ariaHidden = titleId ? undefined : true;
  return /*#__PURE__*/_react.default.createElement("svg", (0, _extends2.default)({
    "aria-hidden": ariaHidden,
    "aria-labelledby": titleId,
    ref: svgRef,
    viewBox: "0 0 640 480",
    xmlnsXlink: "http://www.w3.org/1999/xlink"
  }, props), title ? /*#__PURE__*/_react.default.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/_react.default.createElement("path", {
    d: "M0 0h640v480H0z",
    fill: "#12ad2b"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M0 137.1h640V343H0z",
    fill: "#ffce00"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M0 0v480l240-240",
    fill: "#d21034"
  }), /*#__PURE__*/_react.default.createElement("g", {
    id: "STFlagIcon__c",
    transform: "translate(351.6 240) scale(.34286)"
  }, /*#__PURE__*/_react.default.createElement("g", {
    id: "STFlagIcon__b"
  }, /*#__PURE__*/_react.default.createElement("path", {
    d: "M0-200V0h100",
    id: "STFlagIcon__a",
    transform: "rotate(18 0 -200)"
  }), /*#__PURE__*/_react.default.createElement("use", {
    height: "100%",
    transform: "scale(-1 1)",
    width: "100%",
    xlinkHref: "#STFlagIcon__a"
  })), /*#__PURE__*/_react.default.createElement("use", {
    height: "100%",
    transform: "rotate(72)",
    width: "100%",
    xlinkHref: "#STFlagIcon__b"
  }), /*#__PURE__*/_react.default.createElement("use", {
    height: "100%",
    transform: "rotate(144)",
    width: "100%",
    xlinkHref: "#STFlagIcon__b"
  }), /*#__PURE__*/_react.default.createElement("use", {
    height: "100%",
    transform: "rotate(-144)",
    width: "100%",
    xlinkHref: "#STFlagIcon__b"
  }), /*#__PURE__*/_react.default.createElement("use", {
    height: "100%",
    transform: "rotate(-72)",
    width: "100%",
    xlinkHref: "#STFlagIcon__b"
  })), /*#__PURE__*/_react.default.createElement("use", {
    height: "100%",
    transform: "translate(-523.2)",
    width: "100%",
    x: 700,
    xlinkHref: "#STFlagIcon__c"
  }));
};
const FlagIconWithForwardedRef = /*#__PURE__*/(0, _react.forwardRef)((iconProps, ref) => /*#__PURE__*/_react.default.createElement(FlagIcon, (0, _extends2.default)({}, iconProps, {
  svgRef: ref
})));
const STFlagIcon = /*#__PURE__*/(0, _react.memo)((0, _base.createStyledFlagIcon)(FlagIconWithForwardedRef));
exports.STFlagIcon = STFlagIcon;
STFlagIcon.displayName = 'STFlagIcon';