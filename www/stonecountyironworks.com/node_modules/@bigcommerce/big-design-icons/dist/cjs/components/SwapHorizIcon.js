"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SwapHorizIcon = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _base = require("../base");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// **********************************
// Auto-generated file, do NOT modify
// **********************************

const Icon = _ref => {
  let {
    svgRef,
    title,
    theme,
    ...props
  } = _ref;
  const uniqueTitleId = (0, _react.useId)();
  const titleId = title ? props.titleId || uniqueTitleId : undefined;
  const ariaHidden = titleId ? undefined : true;
  return /*#__PURE__*/_react.default.createElement("svg", (0, _extends2.default)({
    "aria-hidden": ariaHidden,
    "aria-labelledby": titleId,
    fill: "currentColor",
    height: 24,
    ref: svgRef,
    stroke: "currentColor",
    strokeWidth: "0",
    viewBox: "0 0 24 24",
    width: 24
  }, props), title ? /*#__PURE__*/_react.default.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/_react.default.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/_react.default.createElement("path", {
    d: "M6.14 11.86l-2.78 2.79c-.19.2-.19.51 0 .71l2.78 2.79c.31.32.85.09.85-.35V16H13c.55 0 1-.45 1-1s-.45-1-1-1H6.99v-1.79c0-.45-.54-.67-.85-.35zm14.51-3.21l-2.78-2.79c-.31-.32-.85-.09-.85.35V8H11c-.55 0-1 .45-1 1s.45 1 1 1h6.01v1.79c0 .45.54.67.85.35l2.78-2.79c.2-.19.2-.51.01-.7z"
  }));
};
const IconWithForwardedRef = /*#__PURE__*/(0, _react.forwardRef)((iconProps, ref) => /*#__PURE__*/_react.default.createElement(Icon, (0, _extends2.default)({}, iconProps, {
  svgRef: ref
})));
const SwapHorizIcon = /*#__PURE__*/(0, _react.memo)((0, _base.createStyledIcon)(IconWithForwardedRef));
exports.SwapHorizIcon = SwapHorizIcon;
SwapHorizIcon.displayName = 'SwapHorizIcon';