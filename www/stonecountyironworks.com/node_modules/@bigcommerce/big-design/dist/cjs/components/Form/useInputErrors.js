"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useInputErrors = void 0;
var _react = require("react");
var _utils = require("../../utils");
var _Error = require("./Error");
var _Group = require("./Group");
const isValidError = err => {
  if (!err) {
    return false;
  }
  if (typeof err === 'string') {
    return true;
  }
  if ( /*#__PURE__*/(0, _react.isValidElement)(err) && err.type === _Error.FormControlError) {
    return true;
  }
  (0, _utils.warning)('error must be either a string or a FormControlError component.');
  return false;
};
const useInputErrors = (inputId, inputErrors) => {
  const {
    setErrors
  } = (0, _react.useContext)(_Group.FormGroupContext);
  const errors = (0, _react.useMemo)(() => {
    if (Array.isArray(inputErrors)) {
      const filteredErrors = inputErrors.filter(errorItem => isValidError(errorItem));
      return filteredErrors.length > 0 ? filteredErrors : null;
    }
    return isValidError(inputErrors) ? inputErrors : null;
  }, [inputErrors]);
  (0, _react.useEffect)(() => {
    setErrors?.(val => {
      return {
        ...val,
        [inputId]: errors
      };
    });
    return () => {
      setErrors?.(val => {
        return {
          ...val,
          [inputId]: null
        };
      });
    };
  }, [errors, inputId, setErrors]);
  return {
    errors
  };
};
exports.useInputErrors = useInputErrors;