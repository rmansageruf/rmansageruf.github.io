"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StatefulTree = void 0;
var _react = _interopRequireDefault(require("react"));
var _utils = require("../../utils");
var _Tree = require("../Tree");
var _hooks = require("./hooks");
const InternalStatefulTree = _ref => {
  let {
    nodes = [],
    defaultExpanded,
    defaultSelected,
    disabledNodes = [],
    iconless,
    onNodeClick,
    onExpandedChange,
    onSelectionChange,
    selectable: type
  } = _ref;
  const {
    focusedNode,
    onFocus
  } = (0, _hooks.useFocusable)({
    nodes,
    type,
    defaultSelected
  });
  const {
    expandedNodes,
    onToggle
  } = (0, _hooks.useExpandable)({
    defaultExpanded,
    onExpandedChange
  });
  const {
    selectedNodes,
    onSelect
  } = (0, _hooks.useSelectable)({
    defaultSelected,
    disabledNodes,
    nodes,
    onSelectionChange,
    type
  });
  const nodeMap = (0, _Tree.useNodeMap)({
    nodes
  });
  const {
    visibleNodes
  } = (0, _hooks.useVisibleNodes)({
    expandedNodes,
    nodeMap
  });
  const onKeyDown = (0, _Tree.useTreeKeyEvents)({
    onFocus,
    onSelect,
    onToggle,
    nodeMap,
    visibleNodes
  });
  return /*#__PURE__*/_react.default.createElement(_Tree.Tree, {
    disabledNodes: disabledNodes,
    expandable: {
      expandedNodes,
      onToggle
    },
    focusable: {
      focusedNode,
      onFocus
    },
    iconless: iconless,
    nodes: nodes,
    onKeyDown: onKeyDown,
    onNodeClick: onNodeClick,
    selectable: {
      selectedNodes,
      onSelect,
      type
    }
  });
};
const StatefulTree = (0, _utils.typedMemo)(InternalStatefulTree);
exports.StatefulTree = StatefulTree;