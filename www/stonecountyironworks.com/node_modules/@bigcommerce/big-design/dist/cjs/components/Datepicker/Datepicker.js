"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Datepicker = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _reactDatepicker = _interopRequireWildcard(require("react-datepicker"));
var _utils = require("../../utils");
var _Input = require("../Input");
var _Header = _interopRequireDefault(require("./Header"));
var _styled = require("./styled");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const RawDatepicker = _ref => {
  let {
    dateFormat = 'EE, dd MMM, yyyy',
    disabled,
    error,
    forwardedRef,
    label,
    locale = 'en-US',
    localization,
    min,
    max,
    onDateChange,
    required,
    placeholder,
    value,
    ...props
  } = _ref;
  const [selected, setSelected] = (0, _react.useState)();
  const localizationProvider = (0, _utils.createLocalizationProvider)(locale);
  (0, _reactDatepicker.registerLocale)(locale, localizationProvider);
  const updateDate = value => onDateChange(value ? value.toISOString() : value);
  (0, _react.useEffect)(() => {
    if (typeof value === 'string') {
      setSelected(new Date(value));
    } else {
      setSelected(undefined);
    }
  }, [value]);
  return /*#__PURE__*/_react.default.createElement(_styled.StyledDatepicker, null, /*#__PURE__*/_react.default.createElement(_reactDatepicker.default, {
    calendarClassName: "bc-datepicker",
    className: "calendar-input",
    customInput: /*#__PURE__*/_react.default.createElement(_Input.Input, (0, _extends2.default)({
      error: error,
      label: label,
      localization: localization
    }, props)),
    dateFormat: dateFormat || 'EE, dd MMM, yyyy',
    disabled: disabled,
    locale: locale,
    maxDate: max ? new Date(max) : undefined,
    minDate: min ? new Date(min) : undefined,
    onChange: updateDate,
    placeholderText: placeholder,
    ref: forwardedRef,
    renderCustomHeader: _ref2 => {
      let {
        date,
        decreaseMonth,
        increaseMonth,
        prevMonthButtonDisabled,
        nextMonthButtonDisabled
      } = _ref2;
      return /*#__PURE__*/_react.default.createElement(_Header.default, {
        date: date,
        decreaseMonth: decreaseMonth,
        increaseMonth: increaseMonth,
        months: localizationProvider.monthsLong,
        nextMonthButtonDisabled: nextMonthButtonDisabled,
        prevMonthButtonDisabled: prevMonthButtonDisabled
      });
    },
    required: required,
    selected: selected
  }));
};
const Datepicker = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)((props, ref) => /*#__PURE__*/_react.default.createElement(RawDatepicker, (0, _extends2.default)({}, props, {
  forwardedRef: ref
}))));
exports.Datepicker = Datepicker;