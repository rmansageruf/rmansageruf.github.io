"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Modal = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _bigDesignIcons = require("@bigcommerce/big-design-icons");
var _focusTrap = require("focus-trap");
var _react = _interopRequireWildcard(require("react"));
var _reactDom = require("react-dom");
var _utils = require("../../utils");
var _Button = require("../Button");
var _private = require("../Button/private");
var _Typography = require("../Typography");
var _styled = require("./styled");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const Modal = (0, _utils.typedMemo)(props => {
  const [modalContainer, setModalContainer] = (0, _react.useState)(null);
  (0, _react.useEffect)(() => {
    const container = document.createElement('div');
    document.body.appendChild(container);
    setModalContainer(container);
  }, []);
  (0, _react.useEffect)(() => {
    return () => {
      if (modalContainer) {
        document.body.removeChild(modalContainer);
      }
    };
  }, [modalContainer]);
  return props.isOpen && modalContainer ? /*#__PURE__*/(0, _reactDom.createPortal)( /*#__PURE__*/_react.default.createElement(InternalModal, props), modalContainer) : null;
});
exports.Modal = Modal;
const InternalModal = _ref => {
  let {
    actions,
    backdrop = true,
    children,
    closeOnClickOutside = false,
    closeOnEscKey = true,
    header,
    onClose = () => null,
    variant = 'modal'
  } = _ref;
  const initialBodyOverflowYRef = (0, _react.useRef)('');
  const internalTrap = (0, _react.useRef)(null);
  const headerUniqueId = (0, _react.useId)();
  const [modalRef, setModalRef] = (0, _react.useState)(null);
  const onClickAway = event => {
    if (closeOnClickOutside && modalRef === event.target) {
      onClose();
    }
  };
  const onKeyDown = event => {
    if (closeOnEscKey && event.key === 'Escape') {
      onClose();
    }
  };

  // Disable scroll on body when modal is open
  (0, _react.useEffect)(() => {
    initialBodyOverflowYRef.current = document.body.style.overflowY || '';
    document.body.style.overflowY = 'hidden';
    return () => {
      document.body.style.overflowY = initialBodyOverflowYRef.current;
    };
  }, []);

  // Setup focus-trap
  (0, _react.useEffect)(() => {
    if (modalRef && internalTrap.current === null) {
      internalTrap.current = (0, _focusTrap.createFocusTrap)(modalRef, {
        fallbackFocus: modalRef
      });
      internalTrap.current.activate();
    }
    return () => {
      internalTrap.current?.deactivate();
    };
  }, [internalTrap, modalRef]);
  const renderedClose = (0, _react.useMemo)(() => variant === 'modal' && /*#__PURE__*/_react.default.createElement(_styled.StyledModalClose, null, /*#__PURE__*/_react.default.createElement(_private.MessagingButton, {
    iconOnly: /*#__PURE__*/_react.default.createElement(_bigDesignIcons.CloseIcon, {
      title: "Close"
    }),
    onClick: onClose
  })), [onClose, variant]);
  const renderedHeader = (0, _react.useMemo)(() => header && typeof header === 'string' && /*#__PURE__*/_react.default.createElement(_styled.StyledModalHeader, {
    id: headerUniqueId
  }, /*#__PURE__*/_react.default.createElement(_Typography.H2, {
    margin: "none"
  }, header)), [header, headerUniqueId]);
  const renderedActions = (0, _react.useMemo)(() => Array.isArray(actions) && /*#__PURE__*/_react.default.createElement(_styled.StyledModalActions, {
    justifyContent: "flex-end"
  }, actions.map((_ref2, index) => {
    let {
      text,
      onClick,
      ...props
    } = _ref2;
    return /*#__PURE__*/_react.default.createElement(_Button.Button, (0, _extends2.default)({
      key: index
    }, props, {
      onClick: event => {
        internalTrap.current?.deactivate();
        if (typeof onClick === 'function') {
          onClick(event);
        }
      }
    }), text);
  })), [actions]);
  return /*#__PURE__*/_react.default.createElement(_styled.StyledModal, {
    backdrop: backdrop,
    onClick: onClickAway,
    onKeyDown: onKeyDown,
    ref: setModalRef,
    tabIndex: -1,
    variant: variant
  }, /*#__PURE__*/_react.default.createElement(_styled.StyledModalContent, {
    "aria-labelledby": headerUniqueId,
    flexDirection: "column",
    variant: variant
  }, renderedClose, renderedHeader, /*#__PURE__*/_react.default.createElement(_styled.StyledModalBody, null, children), renderedActions));
};