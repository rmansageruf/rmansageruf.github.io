"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledListItem = exports.StyledLink = void 0;
var _bigDesignTheme = require("@bigcommerce/big-design-theme");
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _transitions = require("../../../mixins/transitions");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const StyledListItem = /*#__PURE__*/_styledComponents.default.li.withConfig({
  displayName: "styled__StyledListItem",
  componentId: "sc-surxtv-0"
})(["", " align-items:center;box-sizing:border-box;cursor:pointer;display:flex;font-weight:", ";justify-content:space-between;min-height:", ";min-width:", ";outline:none;padding:", ";a{align-items:center;color:", ";display:flex;height:100%;text-decoration:none;width:100%;&:focus{outline:none;}}", " ", " label{cursor:", ";}"], (0, _transitions.withTransition)(['background-color', 'color']), _ref => {
  let {
    theme,
    isSelected
  } = _ref;
  return isSelected ? theme.typography.fontWeight.semiBold : theme.typography.fontWeight.regular;
}, _ref2 => {
  let {
    theme
  } = _ref2;
  return theme.helpers.remCalc(36);
}, _ref3 => {
  let {
    autoWidth,
    theme
  } = _ref3;
  return autoWidth ? 'auto' : theme.helpers.remCalc(256);
}, _ref4 => {
  let {
    theme
  } = _ref4;
  return `${theme.spacing.xxSmall} ${theme.spacing.medium}`;
}, _ref5 => {
  let {
    theme
  } = _ref5;
  return theme.colors.secondary70;
}, _ref6 => {
  let {
    actionType,
    isAction,
    isHighlighted,
    theme
  } = _ref6;
  return isHighlighted && (isAction ? actionType === 'normal' ? (0, _styledComponents.css)(["background-color:", ";color:", ";a{color:", ";}"], theme.colors.primary10, theme.colors.primary, theme.colors.primary) : (0, _styledComponents.css)(["background-color:", ";color:", ";a{color:", ";}"], theme.colors.danger10, theme.colors.danger50, theme.colors.danger50) : (0, _styledComponents.css)(["background-color:", ";"], theme.colors.secondary10));
}, _ref7 => {
  let {
    disabled,
    theme
  } = _ref7;
  return disabled && (0, _styledComponents.css)(["color:", ";cursor:not-allowed;"], theme.colors.secondary40);
}, _ref8 => {
  let {
    disabled
  } = _ref8;
  return disabled ? 'not-allowed' : 'pointer';
});
exports.StyledListItem = StyledListItem;
const StyledLink = /*#__PURE__*/_styledComponents.default.a.withConfig({
  displayName: "styled__StyledLink",
  componentId: "sc-surxtv-1"
})(["", " align-items:center;color:", ";display:flex;height:100%;text-decoration:none;width:100%;&:focus{outline:none;}"], (0, _transitions.withTransition)(['background-color', 'color']), _ref9 => {
  let {
    theme
  } = _ref9;
  return theme.colors.secondary70;
});
exports.StyledLink = StyledLink;
StyledListItem.defaultProps = {
  theme: _bigDesignTheme.theme
};
StyledLink.defaultProps = {
  theme: _bigDesignTheme.theme
};