"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Status = void 0;
var _bigDesignTheme = require("@bigcommerce/big-design-theme");
var _styledComponents = _interopRequireWildcard(require("styled-components"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const Status = /*#__PURE__*/_styledComponents.default.td.withConfig({
  displayName: "styled__Status",
  componentId: "sc-1aacki0-0"
})(["background-color:", ";border-top:", ";box-sizing:border-box;min-width:", ";padding:0;width:", ";", " ", ";"], _ref => {
  let {
    theme
  } = _ref;
  return theme.colors.secondary30;
}, _ref2 => {
  let {
    theme
  } = _ref2;
  return `${theme.helpers.remCalc(0.5)} solid ${theme.colors.secondary30}`;
}, _ref3 => {
  let {
    theme
  } = _ref3;
  return theme.spacing.xxSmall;
}, _ref4 => {
  let {
    theme
  } = _ref4;
  return theme.spacing.xxSmall;
}, _ref5 => {
  let {
    isInvalid
  } = _ref5;
  return isInvalid && (0, _styledComponents.css)(["background-color:", ";border:", ";"], _ref6 => {
    let {
      theme
    } = _ref6;
    return `${theme.colors.danger}`;
  }, _ref7 => {
    let {
      theme
    } = _ref7;
    return `${theme.helpers.remCalc(0.5)} solid ${theme.colors.danger}`;
  });
}, _ref8 => {
  let {
    isSelected
  } = _ref8;
  return isSelected && (0, _styledComponents.css)(["background-color:", ";border:", ";"], _ref9 => {
    let {
      theme
    } = _ref9;
    return `${theme.colors.primary}`;
  }, _ref10 => {
    let {
      theme
    } = _ref10;
    return `${theme.helpers.remCalc(0.5)} solid ${theme.colors.primary}`;
  });
});
exports.Status = Status;
Status.defaultProps = {
  theme: _bigDesignTheme.theme
};