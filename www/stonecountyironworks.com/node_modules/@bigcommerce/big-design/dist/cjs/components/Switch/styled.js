"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledSwitchLabel = exports.HiddenCheckbox = void 0;
var _bigDesignTheme = require("@bigcommerce/big-design-theme");
var _polished = require("polished");
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _transitions = require("../../mixins/transitions");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const HiddenCheckbox = /*#__PURE__*/_styledComponents.default.input.withConfig({
  displayName: "styled__HiddenCheckbox",
  componentId: "sc-5vnqm9-0"
})(["", " ", ""], (0, _polished.hideVisually)(), _ref => {
  let {
    theme
  } = _ref;
  return (0, _styledComponents.css)(["&:focus + label::before{box-shadow:0px 0px 0px 4px ", ";"], theme.helpers.createRGBA(theme.colors.primary, 0.2));
});
exports.HiddenCheckbox = HiddenCheckbox;
const StyledSwitchLabel = /*#__PURE__*/_styledComponents.default.label.withConfig({
  displayName: "styled__StyledSwitchLabel",
  componentId: "sc-5vnqm9-1"
})(["", " background:", ";border-color:", ";border-radius:", ";cursor:pointer;height:", ";position:relative;width:", ";&:hover{&::before{", "}}&:focus{&::before{box-shadow:0px 0px 0px 4px ", ";}}", " &::before{", " ", " background:", ";border-radius:", ";content:'';height:", ";left:calc(100% - ", ");position:absolute;top:-", ";width:", ";", " ", "}"], (0, _transitions.withTransition)(['background, border-color']), _ref2 => {
  let {
    checked,
    theme
  } = _ref2;
  return checked ? theme.colors.primary30 : theme.colors.secondary30;
}, _ref3 => {
  let {
    checked,
    theme
  } = _ref3;
  return checked ? theme.colors.primary30 : theme.colors.secondary30;
}, _ref4 => {
  let {
    theme
  } = _ref4;
  return theme.helpers.remCalc(8);
}, _ref5 => {
  let {
    theme
  } = _ref5;
  return theme.helpers.remCalc(14);
}, _ref6 => {
  let {
    theme
  } = _ref6;
  return theme.helpers.remCalc(38);
}, _ref7 => {
  let {
    checked,
    theme
  } = _ref7;
  return checked ? (0, _styledComponents.css)(["box-shadow:0px 0px 0px 4px ", ";"], theme.helpers.createRGBA(theme.colors.primary, 0.2)) : (0, _styledComponents.css)(["box-shadow:0px 0px 0px 4px ", ";"], theme.helpers.createRGBA(theme.colors.secondary50, 0.2));
}, _ref8 => {
  let {
    theme
  } = _ref8;
  return theme.helpers.createRGBA(theme.colors.primary, 0.2);
}, _ref9 => {
  let {
    checked,
    disabled,
    theme
  } = _ref9;
  return disabled && (0, _styledComponents.css)(["background:", ";cursor:not-allowed;&:hover{&::before{", " border-radius:", ";}}"], checked ? theme.colors.primary20 : theme.colors.secondary20, _ref10 => {
    let {
      theme
    } = _ref10;
    return theme.shadow.raised;
  }, _ref11 => {
    let {
      theme
    } = _ref11;
    return theme.borderRadius.circle;
  });
}, (0, _transitions.withTransition)(['background, transform']), _ref12 => {
  let {
    theme
  } = _ref12;
  return theme.shadow.raised;
}, _ref13 => {
  let {
    checked,
    theme
  } = _ref13;
  return checked ? theme.colors.primary40 : theme.colors.white;
}, _ref14 => {
  let {
    theme
  } = _ref14;
  return theme.borderRadius.circle;
}, _ref15 => {
  let {
    theme
  } = _ref15;
  return theme.spacing.xLarge;
}, _ref16 => {
  let {
    theme
  } = _ref16;
  return theme.spacing.large;
}, _ref17 => {
  let {
    theme
  } = _ref17;
  return theme.helpers.remCalc(5);
}, _ref18 => {
  let {
    theme
  } = _ref18;
  return theme.spacing.xLarge;
}, _ref19 => {
  let {
    checked,
    disabled,
    theme
  } = _ref19;
  return disabled && (0, _styledComponents.css)(["background:", ";cursor:not-allowed;"], checked ? theme.colors.primary30 : theme.colors.secondary10);
}, _ref20 => {
  let {
    checked
  } = _ref20;
  return !checked && (0, _styledComponents.css)(["transform:translateX(-100%);"]);
});
exports.StyledSwitchLabel = StyledSwitchLabel;
StyledSwitchLabel.defaultProps = {
  theme: _bigDesignTheme.theme
};
HiddenCheckbox.defaultProps = {
  theme: _bigDesignTheme.theme
};