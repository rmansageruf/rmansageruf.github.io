"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledButton = void 0;
var _bigDesignTheme = require("@bigcommerce/big-design-theme");
var _styledComponents = _interopRequireDefault(require("styled-components"));
const StyledButton = /*#__PURE__*/_styledComponents.default.button.withConfig({
  displayName: "styled__StyledButton",
  componentId: "sc-imbea0-0"
})(["align-items:center;appearance:none;background-color:", ";border:1px solid ", ";border-radius:0;color:", ";cursor:pointer;flex:none;font-size:", ";font-weight:", ";justify-content:center;line-height:", ";outline:none;padding:", ";position:relative;text-align:center;text-decoration:none;user-select:none;vertical-align:middle;white-space:nowrap;width:auto;margin-right:-1px;&:last-of-type{margin-right:0;}&:focus{box-shadow:", ";z-index:999;}", " &:first-child{border-top-left-radius:", ";border-bottom-left-radius:", ";}&:last-child{border-top-right-radius:", ";border-bottom-right-radius:", ";}&[disabled]{border-color:", ";pointer-events:none;", "}", ""], _ref => {
  let {
    isActive,
    theme
  } = _ref;
  return isActive ? theme.colors.primary20 : theme.colors.white;
}, _ref2 => {
  let {
    theme,
    isActive
  } = _ref2;
  return isActive ? theme.colors.primary30 : theme.colors.secondary30;
}, _ref3 => {
  let {
    isActive,
    theme
  } = _ref3;
  return isActive ? theme.colors.primary60 : theme.colors.secondary60;
}, _ref4 => {
  let {
    theme
  } = _ref4;
  return theme.typography.fontSize.medium;
}, _ref5 => {
  let {
    theme
  } = _ref5;
  return theme.typography.fontWeight.regular;
}, _ref6 => {
  let {
    theme
  } = _ref6;
  return theme.lineHeight.xLarge;
}, _ref7 => {
  let {
    theme
  } = _ref7;
  return `0 ${theme.spacing.medium}`;
}, _ref8 => {
  let {
    theme
  } = _ref8;
  return `0 0 0 ${theme.spacing.xxSmall} ${theme.colors.primary20}`;
}, _ref9 => {
  let {
    isActive,
    theme
  } = _ref9;
  return isActive ? `
    z-index: 1;
    ` : `
    &:hover {
      background-color: ${theme.colors.secondary10};
    }
    `;
}, _ref10 => {
  let {
    theme
  } = _ref10;
  return theme.borderRadius.normal;
}, _ref11 => {
  let {
    theme
  } = _ref11;
  return theme.borderRadius.normal;
}, _ref12 => {
  let {
    theme
  } = _ref12;
  return theme.borderRadius.normal;
}, _ref13 => {
  let {
    theme
  } = _ref13;
  return theme.borderRadius.normal;
}, _ref14 => {
  let {
    theme
  } = _ref14;
  return theme.colors.secondary30;
}, _ref15 => {
  let {
    theme
  } = _ref15;
  return `
      background-color: ${theme.colors.secondary10};
      color: ${theme.colors.secondary50}
    `;
}, _ref16 => {
  let {
    isIconType
  } = _ref16;
  return isIconType && `
    display: flex;
    width: 36px;
    height: 36px;
    padding: 0;
    align-items: center;
`;
});
exports.StyledButton = StyledButton;
StyledButton.defaultProps = {
  theme: _bigDesignTheme.theme
};