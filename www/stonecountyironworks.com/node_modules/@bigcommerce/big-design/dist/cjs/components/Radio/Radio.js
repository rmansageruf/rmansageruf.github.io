"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Radio = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _utils = require("../../utils");
var _Form = require("../Form");
var _Label = require("./Label");
var _styled = require("./styled");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const RawRadio = _ref => {
  let {
    checked,
    className,
    description,
    disabled,
    label,
    forwardedRef,
    style,
    ...props
  } = _ref;
  const uniqueRadioId = (0, _react.useId)();
  const labelId = (0, _react.useId)();
  const id = props.id ? props.id : uniqueRadioId;
  const renderedLabel = (0, _react.useMemo)(() => {
    if (!label) {
      return null;
    }
    if (typeof label === 'string') {
      return /*#__PURE__*/_react.default.createElement(_Label.RadioLabel, {
        "aria-hidden": disabled,
        disabled: disabled,
        htmlFor: id,
        id: labelId
      }, label);
    }
    if ( /*#__PURE__*/(0, _react.isValidElement)(label) && label.type === _Label.RadioLabel) {
      return /*#__PURE__*/(0, _react.cloneElement)(label, {
        htmlFor: id,
        id: labelId
      });
    }
    (0, _utils.warning)('label must be either a string or a RadioLabel component.');
  }, [disabled, id, label, labelId]);
  const renderedDescription = (0, _react.useMemo)(() => {
    if (!description) {
      return null;
    }
    const link = typeof description === 'object' ? description.link : undefined;
    const text = typeof description === 'object' ? description.text : description;
    return /*#__PURE__*/_react.default.createElement(_Form.FormControlDescription, {
      link: link
    }, text);
  }, [description]);
  return /*#__PURE__*/_react.default.createElement(_styled.RadioContainer, {
    className: className,
    style: style
  }, /*#__PURE__*/_react.default.createElement(_styled.HiddenRadio, (0, _extends2.default)({
    checked: checked,
    disabled: disabled,
    id: id,
    type: "radio"
  }, props, {
    "aria-labelledby": labelId,
    ref: forwardedRef
  })), /*#__PURE__*/_react.default.createElement(_styled.StyledRadio, {
    "aria-hidden": true,
    checked: checked,
    disabled: disabled,
    htmlFor: id
  }), /*#__PURE__*/_react.default.createElement(_styled.RadioLabelContainer, null, renderedLabel, renderedDescription));
};
const Radio = (0, _utils.typedMemo)( /*#__PURE__*/(0, _react.forwardRef)((_ref2, ref) => {
  let {
    className,
    style,
    ...props
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement(RawRadio, (0, _extends2.default)({}, props, {
    forwardedRef: ref
  }));
}));
exports.Radio = Radio;