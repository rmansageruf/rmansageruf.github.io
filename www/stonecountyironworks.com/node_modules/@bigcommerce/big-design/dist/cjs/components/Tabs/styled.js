"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledTabs = exports.StyledTab = void 0;
var _bigDesignTheme = require("@bigcommerce/big-design-theme");
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _private = require("../Button/private");
var _Flex = require("../Flex");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const StyledTabs = /*#__PURE__*/(0, _styledComponents.default)(_Flex.Flex).withConfig({
  displayName: "styled__StyledTabs",
  componentId: "sc-6je9le-0"
})(["overflow:auto;"]);
exports.StyledTabs = StyledTabs;
const StyledTab = /*#__PURE__*/(0, _styledComponents.default)(_private.StyleableButton).withConfig({
  displayName: "styled__StyledTab",
  componentId: "sc-6je9le-1"
})(["border:none;border-bottom:", " solid transparent;border-bottom-color:", ";border-radius:0;color:", ";pointer-events:", ";width:auto;", ""], _ref => {
  let {
    theme
  } = _ref;
  return theme.spacing.xxSmall;
}, props => props.id === props.activeTab ? props.theme.colors.primary40 : 'transparent', _ref2 => {
  let {
    theme
  } = _ref2;
  return theme.colors.primary;
}, props => props.id === props.activeTab ? 'none' : 'auto', props => props.id === props.activeTab && (0, _styledComponents.css)(["color:", ";&:focus{box-shadow:none;}"], props.theme.colors.secondary70));
exports.StyledTab = StyledTab;
StyledTab.defaultProps = {
  theme: _bigDesignTheme.theme,
  variant: 'subtle'
};
StyledTabs.defaultProps = {
  theme: _bigDesignTheme.theme
};