"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledRadio = exports.RadioLabelContainer = exports.RadioContainer = exports.HiddenRadio = void 0;
var _bigDesignTheme = require("@bigcommerce/big-design-theme");
var _polished = require("polished");
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _transitions = require("../../mixins/transitions");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const RadioLabelContainer = /*#__PURE__*/_styledComponents.default.div.withConfig({
  displayName: "styled__RadioLabelContainer",
  componentId: "sc-1x9u9a8-0"
})(["margin-left:", ";"], _ref => {
  let {
    theme
  } = _ref;
  return theme.spacing.xSmall;
});
exports.RadioLabelContainer = RadioLabelContainer;
const RadioContainer = /*#__PURE__*/_styledComponents.default.div.withConfig({
  displayName: "styled__RadioContainer",
  componentId: "sc-1x9u9a8-1"
})(["align-items:flex-start;display:flex;"]);
exports.RadioContainer = RadioContainer;
const HiddenRadio = /*#__PURE__*/_styledComponents.default.input.withConfig({
  displayName: "styled__HiddenRadio",
  componentId: "sc-1x9u9a8-2"
})(["", ""], (0, _polished.hideVisually)());
exports.HiddenRadio = HiddenRadio;
const StyledRadio = /*#__PURE__*/_styledComponents.default.label.withConfig({
  displayName: "styled__StyledRadio",
  componentId: "sc-1x9u9a8-3"
})(["", " background-color:", ";border:", ";border-color:", ";border-radius:", ";color:", ";cursor:pointer;display:inline-block;flex-shrink:0;height:", ";position:relative;user-select:none;width:", ";", ";&:hover{border-color:", ";}", ":focus + &{box-shadow:", ";}&:after{", " background-color:", ";border-radius:50%;content:'';height:", ";left:50%;opacity:0;position:absolute;top:50%;transform:translate(-50%,-50%);width:", ";}", ""], (0, _transitions.withTransition)(['border-color', 'box-shadow']), _ref2 => {
  let {
    disabled,
    theme
  } = _ref2;
  return disabled ? theme.colors.secondary10 : theme.colors.white;
}, _ref3 => {
  let {
    theme
  } = _ref3;
  return theme.border.box;
}, props => props.checked ? props.theme.colors.primary40 : props.theme.colors.secondary30, _ref4 => {
  let {
    theme
  } = _ref4;
  return theme.borderRadius.circle;
}, _ref5 => {
  let {
    theme
  } = _ref5;
  return theme.colors.white;
}, _ref6 => {
  let {
    theme
  } = _ref6;
  return theme.spacing.large;
}, _ref7 => {
  let {
    theme
  } = _ref7;
  return theme.spacing.large;
}, _ref8 => {
  let {
    disabled,
    theme
  } = _ref8;
  return disabled && (0, _styledComponents.css)(["cursor:not-allowed;border-color:", ";"], theme.colors.secondary30);
}, _ref9 => {
  let {
    checked,
    disabled,
    theme
  } = _ref9;
  return !disabled && (checked ? theme.colors.primary50 : theme.colors.secondary40);
}, HiddenRadio, _ref10 => {
  let {
    theme
  } = _ref10;
  return `0 0 0 ${theme.spacing.xxSmall} ${theme.colors.primary20}`;
}, (0, _transitions.withTransition)(['opacity']), _ref11 => {
  let {
    disabled,
    theme
  } = _ref11;
  return disabled ? theme.colors.secondary40 : theme.colors.primary40;
}, _ref12 => {
  let {
    theme
  } = _ref12;
  return theme.spacing.small;
}, _ref13 => {
  let {
    theme
  } = _ref13;
  return theme.spacing.small;
}, props => props.checked && (0, _styledComponents.css)(["&:after{opacity:1;}"]));
exports.StyledRadio = StyledRadio;
StyledRadio.defaultProps = {
  theme: _bigDesignTheme.theme
};
RadioLabelContainer.defaultProps = {
  theme: _bigDesignTheme.theme
};