export function depthFirstSearch(nodes, predicate) {
  let greedy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  let list = [];
  for (const node of nodes) {
    if (predicate(node)) {
      if (greedy) {
        return node;
      }
      list.push(node);
    }
    if (node.children && node.children.length > 0) {
      if (greedy) {
        return depthFirstSearch(node.children, predicate, greedy);
      }
      const nestedDfs = depthFirstSearch(node.children, predicate, greedy);
      if (nestedDfs) {
        list = list.concat(nestedDfs);
      }
    }
  }
  return greedy ? null : list;
}