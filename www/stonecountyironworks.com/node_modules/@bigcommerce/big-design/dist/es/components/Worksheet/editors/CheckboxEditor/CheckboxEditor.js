import React, { useCallback, useEffect } from 'react';
import { typedMemo } from '../../../../utils';
import { Checkbox } from '../../../Checkbox';
import { CheckboxWrapper } from './styled';
const InternalCheckboxEditor = _ref => {
  let {
    cell,
    toggle,
    onBlur,
    onChange
  } = _ref;
  const handleChange = useCallback(() => {
    onChange(!cell.value);
  }, [cell, onChange]);
  useEffect(() => {
    // toggle will only return true when a user has pressed
    // `enter` or `space` when a checkbox cell is selected.
    // It is virtually the same as clicking on the checkbox.
    if (toggle) {
      handleChange();
    }
  }, [cell.value, handleChange, toggle]);
  return /*#__PURE__*/React.createElement(CheckboxWrapper, null, /*#__PURE__*/React.createElement(Checkbox, {
    checked: cell.value === '' ? undefined : cell.value,
    disabled: cell.disabled,
    hiddenLabel: true,
    label: cell.value ? 'Checked' : 'Unchecked',
    onBlur: onBlur,
    onChange: handleChange
  }));
};
export const CheckboxEditor = typedMemo(InternalCheckboxEditor);