import { theme as defaultTheme } from '@bigcommerce/big-design-theme';
import { hideVisually } from 'polished';
import styled, { css } from 'styled-components';
import { Flex } from '../../Flex';
import { withTableColumnDisplay } from '../mixins';
export const StyledTableHeaderCell = /*#__PURE__*/styled.th.withConfig({
  displayName: "styled__StyledTableHeaderCell",
  componentId: "sc-17yo25r-0"
})(["", " background-color:", ";border-bottom:", ";border-top:", ";box-sizing:border-box;color:", ";font-size:", ";padding:", ";white-space:nowrap;&:first-of-type{padding-left:", ";}&:last-of-type{padding-right:", ";}", ";", ";", ""], withTableColumnDisplay(), _ref => {
  let {
    theme
  } = _ref;
  return theme.colors.white;
}, _ref2 => {
  let {
    theme
  } = _ref2;
  return theme.border.box;
}, _ref3 => {
  let {
    theme
  } = _ref3;
  return theme.border.box;
}, _ref4 => {
  let {
    theme
  } = _ref4;
  return theme.colors.secondary70;
}, _ref5 => {
  let {
    theme
  } = _ref5;
  return theme.typography.fontSize.medium;
}, _ref6 => {
  let {
    theme
  } = _ref6;
  return theme.spacing.small;
}, _ref7 => {
  let {
    theme
  } = _ref7;
  return theme.spacing.xLarge;
}, _ref8 => {
  let {
    theme
  } = _ref8;
  return theme.spacing.xLarge;
}, _ref9 => {
  let {
    isSortable
  } = _ref9;
  return isSortable && css(["cursor:pointer;"]);
}, _ref10 => {
  let {
    width
  } = _ref10;
  return width !== undefined && css(["width:", ";"], typeof width === 'string' ? width : `${width}px`);
}, _ref11 => {
  let {
    theme,
    stickyHeader,
    stickyHeight
  } = _ref11;
  return stickyHeader && stickyHeight >= 0 && css(["", "{position:sticky;top:", ";z-index:", ";}"], theme.breakpoints.tablet, theme.helpers.remCalc(stickyHeight), theme.zIndex.sticky);
});
export const StyledTableHeaderIcon = /*#__PURE__*/styled(StyledTableHeaderCell).withConfig({
  displayName: "styled__StyledTableHeaderIcon",
  componentId: "sc-17yo25r-1"
})(["width:", ";white-space:nowrap;"], _ref12 => {
  let {
    theme
  } = _ref12;
  return theme.helpers.addValues(theme.spacing.xLarge, theme.spacing.small);
});
export const StyledFlex = /*#__PURE__*/styled(Flex).withConfig({
  displayName: "styled__StyledFlex",
  componentId: "sc-17yo25r-2"
})(["", ";", ";"], _ref13 => {
  let {
    align
  } = _ref13;
  switch (align) {
    case 'center':
      return css(["justify-content:center;"]);
    case 'right':
      return css(["justify-content:flex-end;"]);
    default:
      return css(["justify-content:flex-start;"]);
  }
}, _ref14 => {
  let {
    hide
  } = _ref14;
  return hide && hideVisually();
});
StyledFlex.defaultProps = {
  theme: defaultTheme
};
StyledTableHeaderCell.defaultProps = {
  theme: defaultTheme
};
StyledTableHeaderIcon.defaultProps = {
  theme: defaultTheme
};