import _extends from "@babel/runtime/helpers/esm/extends";
import { CloseIcon } from '@bigcommerce/big-design-icons';
import React, { memo, useMemo } from 'react';
import { excludePaddingProps } from '../../mixins';
import { getMessagingIcon } from '../../utils';
import { Box } from '../Box';
import { MessagingButton } from '../Button/private';
import { GridItem } from '../Grid';
import { StyledAlert, StyledHeader, StyledLink, StyledMessageItem } from './styled';
export const Alert = /*#__PURE__*/memo(_ref => {
  let {
    className,
    style,
    header,
    ...props
  } = _ref;
  const filteredProps = excludePaddingProps(props);
  const icon = useMemo(() => props.type && getMessagingIcon(props.type), [props.type]);
  const renderedMessages = useMemo(() => props.messages.map((_ref2, index) => {
    let {
      text,
      link
    } = _ref2;
    return /*#__PURE__*/React.createElement(Box, {
      key: index
    }, /*#__PURE__*/React.createElement(StyledMessageItem, null, text), ' ', link && /*#__PURE__*/React.createElement(StyledLink, link, link.text));
  }), [props.messages]);
  const renderedHeader = useMemo(() => header && /*#__PURE__*/React.createElement(StyledHeader, null, header), [header]);
  return /*#__PURE__*/React.createElement(StyledAlert, _extends({}, filteredProps, {
    role: "alert"
  }), /*#__PURE__*/React.createElement(GridItem, {
    gridArea: "icon"
  }, icon), /*#__PURE__*/React.createElement(GridItem, {
    gridArea: "messages"
  }, renderedHeader, renderedMessages), props.onClose && /*#__PURE__*/React.createElement(GridItem, null, /*#__PURE__*/React.createElement(MessagingButton, {
    iconOnly: /*#__PURE__*/React.createElement(CloseIcon, {
      size: "large"
    }),
    onClick: props.onClose
  })));
});
Alert.defaultProps = {
  messages: [],
  type: 'success'
};