import { CheckIcon } from '@bigcommerce/big-design-icons';
import React, { memo } from 'react';
import { StyledDash, StyledLight, StyledSrOnlyText, StyledStep, StyledText } from './styled';
export const Step = /*#__PURE__*/memo(_ref => {
  let {
    index,
    selectedIndex,
    stepperLength,
    text
  } = _ref;
  const isComplete = selectedIndex > index;
  const isSelected = selectedIndex === index;
  const isActive = isSelected || isComplete;
  return /*#__PURE__*/React.createElement(StyledStep, {
    display: {
      mobile: isSelected ? 'grid' : 'none',
      tablet: 'grid'
    },
    marginBottom: "xLarge",
    marginRight: {
      tablet: 'xSmall'
    }
  }, /*#__PURE__*/React.createElement(StyledLight, {
    alignItems: "center",
    backgroundColor: isActive ? 'primary' : 'secondary50',
    flexDirection: "row",
    justifyContent: "center",
    paddingHorizontal: {
      mobile: 'xSmall',
      tablet: 'none'
    },
    paddingVertical: {
      mobile: 'xxSmall',
      tablet: 'none'
    }
  }, isComplete ? /*#__PURE__*/React.createElement(CheckIcon, {
    color: "white",
    size: "large"
  }) :
  /*#__PURE__*/
  // span is needed to preserve white space inside a flex container
  React.createElement("span", null, /*#__PURE__*/React.createElement(StyledSrOnlyText, null, "Step"), ` ${index + 1} `, /*#__PURE__*/React.createElement(StyledSrOnlyText, null, "of ", stepperLength))), /*#__PURE__*/React.createElement(StyledDash, {
    backgroundColor: isComplete ? 'primary' : 'secondary30',
    display: {
      mobile: 'none',
      tablet: index === stepperLength - 1 ? 'none' : 'block'
    }
  }), /*#__PURE__*/React.createElement(StyledText, {
    color: isActive ? 'secondary70' : 'secondary50'
  }, text));
});
Step.displayName = 'Step';