import _extends from "@babel/runtime/helpers/esm/extends";
import React, { forwardRef, memo, useMemo } from 'react';
import { createLocalizationProvider, getTimeIntervals } from '../../utils';
import { Select } from '../Select';
const RawTimePicker = _ref => {
  let {
    error,
    forwardedRef,
    label,
    locale = 'en-US',
    localization,
    onTimeChange,
    value,
    ...props
  } = _ref;
  const localizationProvider = createLocalizationProvider(locale);
  const options = useMemo(() => getTimeIntervals(localizationProvider), [localizationProvider]);
  return /*#__PURE__*/React.createElement(Select, _extends({
    autoWidth: true,
    error: error,
    inputRef: forwardedRef,
    label: label,
    localization: localization,
    onOptionChange: onTimeChange,
    options: options,
    placeholder: "hh : mm",
    value: value
  }, props));
};
export const Timepicker = /*#__PURE__*/memo( /*#__PURE__*/forwardRef((_ref2, ref) => {
  let {
    className,
    style,
    ...props
  } = _ref2;
  return /*#__PURE__*/React.createElement(RawTimePicker, _extends({}, props, {
    forwardedRef: ref
  }));
}));