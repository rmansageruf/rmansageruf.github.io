import { addValues, theme as defaultTheme, remCalc } from '@bigcommerce/big-design-theme';
import styled, { css } from 'styled-components';
import { withPaddings } from '../../mixins';
import { withTransition } from '../../mixins/transitions';
export const StyledInputWrapper = /*#__PURE__*/styled.span.withConfig({
  displayName: "styled__StyledInputWrapper",
  componentId: "sc-g32raa-0"
})(["", " align-items:center;background-color:", ";border-radius:", ";box-sizing:border-box;display:flex;min-height:", ";overflow:hidden;position:relative;width:100%;", ";&:hover:not([disabled]){", "}", ";&[disabled]{background-color:", ";}"], withTransition(['border', 'box-shadow']), _ref => {
  let {
    theme
  } = _ref;
  return theme.colors.white;
}, _ref2 => {
  let {
    theme
  } = _ref2;
  return theme.borderRadius.normal;
}, _ref3 => {
  let {
    theme
  } = _ref3;
  return addValues(theme.spacing.xxLarge, theme.spacing.xxSmall);
}, _ref4 => {
  let {
    error,
    theme
  } = _ref4;
  return css(["border:", ";"], error ? theme.border.boxError : theme.border.box);
}, _ref5 => {
  let {
    error,
    theme
  } = _ref5;
  return error ? css(["border:", ";"], theme.border.boxError) : css(["border:1px solid ", ";"], theme.colors.secondary40);
}, _ref6 => {
  let {
    error,
    focus,
    theme
  } = _ref6;
  return focus && css(["outline:none;box-shadow:0 0 0 4px ", ";"], error ? theme.colors.danger20 : theme.colors.primary20);
}, _ref7 => {
  let {
    theme
  } = _ref7;
  return theme.colors.secondary20;
});
export const StyledInput = /*#__PURE__*/styled.input.withConfig({
  displayName: "styled__StyledInput",
  componentId: "sc-g32raa-1"
})(["background-color:inherit;border:0;box-sizing:border-box;color:", ";flex:1 1 40%;height:100%;padding:0;padding-left:", ";width:100%;&:focus{outline:none;}&::placeholder{color:", ";font-size:", ";}&:-webkit-autofill{background-color:", " !important;-webkit-box-shadow:0 0 0px 1000px ", " inset;}", ";", ";", ";", ";", ";&[disabled]{background-color:", ";}"], _ref8 => {
  let {
    theme
  } = _ref8;
  return theme.colors.secondary70;
}, _ref9 => {
  let {
    theme
  } = _ref9;
  return theme.spacing.xSmall;
}, _ref10 => {
  let {
    theme
  } = _ref10;
  return theme.colors.secondary40;
}, _ref11 => {
  let {
    theme
  } = _ref11;
  return theme.typography.fontSize.medium;
}, _ref12 => {
  let {
    theme
  } = _ref12;
  return theme.colors.primary10;
}, _ref13 => {
  let {
    theme
  } = _ref13;
  return theme.colors.primary10;
}, _ref14 => {
  let {
    iconRight,
    theme
  } = _ref14;
  return iconRight && css(["padding-right:", ";"], addValues(theme.spacing.xxSmall, theme.spacing.xxLarge));
}, _ref15 => {
  let {
    iconLeft,
    theme
  } = _ref15;
  return iconLeft && css(["padding-left:", ";"], addValues(theme.spacing.xxSmall, theme.spacing.xxLarge));
}, _ref16 => {
  let {
    chips,
    theme
  } = _ref16;
  return chips && css(["min-height:", ";padding-left:", ";padding-right:", ";"], theme.spacing.xLarge, theme.spacing.xxSmall, theme.spacing.none);
}, _ref17 => {
  let {
    chips,
    theme
  } = _ref17;
  return chips && chips.length && css(["margin-top:", ";"], theme.spacing.xxSmall);
}, _ref18 => {
  let {
    chips
  } = _ref18;
  return !chips && css(["min-height:", ";"], remCalc(34));
}, _ref19 => {
  let {
    theme
  } = _ref19;
  return theme.colors.secondary20;
});
export const StyledIconWrapper = /*#__PURE__*/styled.div.withConfig({
  displayName: "styled__StyledIconWrapper",
  componentId: "sc-g32raa-2"
})(["align-items:center;color:", ";display:flex;height:100%;position:absolute;top:0;", " ", " ", ""], _ref20 => {
  let {
    theme
  } = _ref20;
  return theme.colors.secondary60;
}, withPaddings(), _ref21 => {
  let {
    paddingLeft
  } = _ref21;
  return paddingLeft === 'xSmall' && css(["left:0;"]);
}, _ref22 => {
  let {
    paddingRight
  } = _ref22;
  return paddingRight === 'xSmall' && css(["right:0;"]);
});
export const StyledInputContent = /*#__PURE__*/styled.div.withConfig({
  displayName: "styled__StyledInputContent",
  componentId: "sc-g32raa-3"
})(["align-items:center;box-sizing:border-box;display:flex;flex-wrap:wrap;flex:1;height:100%;", ";", ";"], _ref23 => {
  let {
    chips,
    theme
  } = _ref23;
  return chips && css(["margin-left:", ";padding-right:", ";"], theme.spacing.xxSmall, addValues(theme.spacing.xxSmall, theme.spacing.xxLarge));
}, _ref24 => {
  let {
    chips,
    theme
  } = _ref24;
  return chips && chips.length && css(["margin-bottom:", ";"], theme.spacing.xxSmall);
});
StyledInput.defaultProps = {
  theme: defaultTheme
};
StyledInputWrapper.defaultProps = {
  theme: defaultTheme
};
StyledIconWrapper.defaultProps = {
  theme: defaultTheme
};
StyledInputContent.defaultProps = {
  theme: defaultTheme
};