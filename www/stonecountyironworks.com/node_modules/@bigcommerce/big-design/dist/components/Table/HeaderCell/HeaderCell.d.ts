import React, { RefObject, TableHTMLAttributes } from 'react';
import { TableColumnDisplayProps } from '../mixins';
import { TableColumn, TableItem } from '../types';
interface Localization {
    ascendingOrder: string;
    descendingOrder: string;
}
export interface HeaderCellProps<T> extends TableHTMLAttributes<HTMLTableCellElement>, TableColumnDisplayProps {
    actionsRef: RefObject<HTMLDivElement>;
    children?: React.ReactNode;
    column: TableColumn<T>;
    id: string;
    hide?: boolean;
    isSorted?: boolean;
    localization: Localization;
    sortDirection?: 'ASC' | 'DESC';
    stickyHeader?: boolean;
    onSortClick?(column: TableColumn<T>): void;
}
export interface HeaderCheckboxCellProps {
    actionsRef: RefObject<HTMLDivElement>;
    stickyHeader?: boolean;
}
export interface DragIconCellProps {
    actionsRef: RefObject<HTMLDivElement>;
    headerCellIconRef: RefObject<HTMLTableCellElement>;
}
export declare const HeaderCheckboxCell: React.FC<HeaderCheckboxCellProps>;
export declare const DragIconHeaderCell: React.FC<DragIconCellProps>;
export declare const HeaderCell: <T extends TableItem>({ actionsRef, children, column, display, hide, id, isSorted, localization, onSortClick, sortDirection, stickyHeader, }: HeaderCellProps<T>) => React.JSX.Element;
export {};
//# sourceMappingURL=HeaderCell.d.ts.map