import { Dispatch, SetStateAction } from 'react';
import { TableSelectable } from '../../types';
export interface SelectRowArg {
    isTheOnlySelectedChildRow?: boolean;
    selectedItems: TableSelectable['selectedItems'];
    isParentRow?: boolean;
    parentRowId: string;
    setSelectedParentRowsCrossPages: Dispatch<SetStateAction<Set<string>>>;
    childRowId?: string;
    isChildrenRowsSelectable?: TableSelectable['isChildrenRowsSelectable'];
    childrenRowsIds: string[];
}
export declare function selectParentRow({ selectedItems, setSelectedParentRowsCrossPages, childRowId, parentRowId, isChildrenRowsSelectable, childrenRowsIds, }: SelectRowArg): TableSelectable['selectedItems'];
export declare function selectChildRow({ childRowId, isTheOnlySelectedChildRow, selectedItems, parentRowId, setSelectedParentRowsCrossPages, childrenRowsIds, }: SelectRowArg): TableSelectable['selectedItems'];
export declare function getTotalSelectedChildRows({ selectedItems, childrenRowsIds }: SelectRowArg): number;
//# sourceMappingURL=helpers.d.ts.map