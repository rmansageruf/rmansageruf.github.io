import { State } from '@popperjs/core';
import { UseSelectPropGetters } from 'downshift';
import React, { HTMLAttributes } from 'react';
import { DropdownProps } from '../Dropdown';
import { SelectAction, SelectOption, SelectProps } from '../Select';
export interface ListProps<T> extends HTMLAttributes<HTMLUListElement> {
    action?: SelectAction;
    autoWidth: boolean;
    filteredItems?: Array<SelectOption<T> | SelectAction>;
    highlightedIndex: number;
    isOpen: boolean;
    items: DropdownProps['items'] | SelectProps<T>['options'];
    isDropdown?: boolean;
    maxHeight?: number;
    selectedItem?: SelectOption<T> | null;
    selectedItems?: Array<SelectOption<T>> | null;
    addItem?(item: SelectOption<T>): void;
    getItemProps: UseSelectPropGetters<any>['getItemProps'];
    getMenuProps: UseSelectPropGetters<any>['getMenuProps'];
    update: (() => Promise<Partial<State>>) | null;
    removeItem?(item: SelectOption<T>): void;
}
export declare const List: React.MemoExoticComponent<React.ForwardRefExoticComponent<ListProps<unknown> & React.RefAttributes<HTMLUListElement>>>;
//# sourceMappingURL=List.d.ts.map