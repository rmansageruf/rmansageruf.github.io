import React from 'react';
import { TreeNodeId, TreeProps, TreeSelectable } from '../Tree';
export interface StatefulTreeProps<T> extends Omit<TreeProps<T>, 'expandable' | 'focusable' | 'selectable' | 'onKeyDown'> {
    defaultExpanded?: TreeNodeId[];
    defaultSelected?: TreeNodeId[];
    iconless?: boolean;
    selectable?: TreeSelectable<T>['type'];
    onExpandedChange?: (expandedNodes: TreeNodeId[]) => void;
    onSelectionChange?: (selectedValues: T[]) => void;
}
export declare const StatefulTree: <T>({ nodes, defaultExpanded, defaultSelected, disabledNodes, iconless, onNodeClick, onExpandedChange, onSelectionChange, selectable: type, }: StatefulTreeProps<T>) => React.ReactElement<StatefulTreeProps<T>, string | React.JSXElementConstructor<any>>;
//# sourceMappingURL=StatefulTree.d.ts.map