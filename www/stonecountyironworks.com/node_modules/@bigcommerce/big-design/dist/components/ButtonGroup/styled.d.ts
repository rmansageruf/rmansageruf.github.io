/// <reference types="react" />
interface StyledButtonProps {
    borderRadius?: boolean;
}
interface StyledFlexItemProps {
    isVisible: boolean;
}
export declare const StyledButton: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../Button/Button").ButtonProps & import("react").RefAttributes<HTMLButtonElement>>, import("styled-components").DefaultTheme, StyledButtonProps, never>;
export declare const StyledFlexItem: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../Box/Box").BoxProps & Partial<{
    alignSelf: "center" | "auto" | "baseline" | "normal" | "flex-start" | "flex-end" | "stretch" | "self-start" | "self-end" | import("../../types").Responsive<"center" | "auto" | "baseline" | "normal" | "flex-start" | "flex-end" | "stretch" | "self-start" | "self-end">;
    flexBasis: string | import("../../types").Responsive<string>;
    flexGrow: number | import("../../types").Responsive<number>;
    flexOrder: number | import("../../types").Responsive<number>;
    flexShrink: number | import("../../types").Responsive<number>;
}> & import("react").RefAttributes<HTMLDivElement>>, import("styled-components").DefaultTheme, StyledFlexItemProps, never>;
export {};
//# sourceMappingURL=styled.d.ts.map